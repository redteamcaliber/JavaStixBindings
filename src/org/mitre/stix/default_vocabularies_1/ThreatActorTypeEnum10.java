//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.stix.default_vocabularies_1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ThreatActorTypeEnum-1.0.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ThreatActorTypeEnum-1.0">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Cyber Espionage Operations"/>
 *     &lt;enumeration value="Hacker"/>
 *     &lt;enumeration value="Hacker - White hat"/>
 *     &lt;enumeration value="Hacker - Gray hat"/>
 *     &lt;enumeration value="Hacker - Black hat"/>
 *     &lt;enumeration value="Hacktivist"/>
 *     &lt;enumeration value="State Actor / Agency"/>
 *     &lt;enumeration value="eCrime Actor - Credential Theft Botnet Operator"/>
 *     &lt;enumeration value="eCrime Actor - Credential Theft Botnet Service"/>
 *     &lt;enumeration value="eCrime Actor - Malware Developer"/>
 *     &lt;enumeration value="eCrime Actor - Money Laundering Network"/>
 *     &lt;enumeration value="eCrime Actor - Organized Crime Actor"/>
 *     &lt;enumeration value="eCrime Actor - Spam Service"/>
 *     &lt;enumeration value="eCrime Actor - Traffic Service"/>
 *     &lt;enumeration value="eCrime Actor - Underground Call Service"/>
 *     &lt;enumeration value="Insider Threat"/>
 *     &lt;enumeration value="Disgruntled Customer / User"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ThreatActorTypeEnum-1.0")
@XmlEnum
public enum ThreatActorTypeEnum10 {

    @XmlEnumValue("Cyber Espionage Operations")
    CYBER_ESPIONAGE_OPERATIONS("Cyber Espionage Operations"),
    @XmlEnumValue("Hacker")
    HACKER("Hacker"),
    @XmlEnumValue("Hacker - White hat")
    HACKER_WHITE_HAT("Hacker - White hat"),
    @XmlEnumValue("Hacker - Gray hat")
    HACKER_GRAY_HAT("Hacker - Gray hat"),
    @XmlEnumValue("Hacker - Black hat")
    HACKER_BLACK_HAT("Hacker - Black hat"),
    @XmlEnumValue("Hacktivist")
    HACKTIVIST("Hacktivist"),
    @XmlEnumValue("State Actor / Agency")
    STATE_ACTOR_AGENCY("State Actor / Agency"),
    @XmlEnumValue("eCrime Actor - Credential Theft Botnet Operator")
    E_CRIME_ACTOR_CREDENTIAL_THEFT_BOTNET_OPERATOR("eCrime Actor - Credential Theft Botnet Operator"),
    @XmlEnumValue("eCrime Actor - Credential Theft Botnet Service")
    E_CRIME_ACTOR_CREDENTIAL_THEFT_BOTNET_SERVICE("eCrime Actor - Credential Theft Botnet Service"),
    @XmlEnumValue("eCrime Actor - Malware Developer")
    E_CRIME_ACTOR_MALWARE_DEVELOPER("eCrime Actor - Malware Developer"),
    @XmlEnumValue("eCrime Actor - Money Laundering Network")
    E_CRIME_ACTOR_MONEY_LAUNDERING_NETWORK("eCrime Actor - Money Laundering Network"),
    @XmlEnumValue("eCrime Actor - Organized Crime Actor")
    E_CRIME_ACTOR_ORGANIZED_CRIME_ACTOR("eCrime Actor - Organized Crime Actor"),
    @XmlEnumValue("eCrime Actor - Spam Service")
    E_CRIME_ACTOR_SPAM_SERVICE("eCrime Actor - Spam Service"),
    @XmlEnumValue("eCrime Actor - Traffic Service")
    E_CRIME_ACTOR_TRAFFIC_SERVICE("eCrime Actor - Traffic Service"),
    @XmlEnumValue("eCrime Actor - Underground Call Service")
    E_CRIME_ACTOR_UNDERGROUND_CALL_SERVICE("eCrime Actor - Underground Call Service"),
    @XmlEnumValue("Insider Threat")
    INSIDER_THREAT("Insider Threat"),
    @XmlEnumValue("Disgruntled Customer / User")
    DISGRUNTLED_CUSTOMER_USER("Disgruntled Customer / User");
    private final String value;

    ThreatActorTypeEnum10(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ThreatActorTypeEnum10 fromValue(String v) {
        for (ThreatActorTypeEnum10 c: ThreatActorTypeEnum10 .values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
