//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.stix.default_vocabularies_1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for IncidentCategoryEnum-1.0.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="IncidentCategoryEnum-1.0">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Exercise/Network Defense Testing"/>
 *     &lt;enumeration value="Unauthorized Access"/>
 *     &lt;enumeration value="Denial of Service"/>
 *     &lt;enumeration value="Malicious Code"/>
 *     &lt;enumeration value="Improper Usage"/>
 *     &lt;enumeration value="Scans/Probes/Attempted Access"/>
 *     &lt;enumeration value="Investigation"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "IncidentCategoryEnum-1.0")
@XmlEnum
public enum IncidentCategoryEnum10 {


    /**
     * This category is used during state, federal, national, international exercises and approved activity testing of internal/external network defenses or responses.
     * 
     */
    @XmlEnumValue("Exercise/Network Defense Testing")
    EXERCISE_NETWORK_DEFENSE_TESTING("Exercise/Network Defense Testing"),

    /**
     * In this category an individual gains logical or physical access without permission to a federal agency network, system, application, data, or other resource.
     * 
     */
    @XmlEnumValue("Unauthorized Access")
    UNAUTHORIZED_ACCESS("Unauthorized Access"),

    /**
     * An attack that successfully prevents or impairs the normal authorized functionality of networks, systems or applications by exhausting resources. This activity includes being the victim or participating in the DoS.
     * 
     */
    @XmlEnumValue("Denial of Service")
    DENIAL_OF_SERVICE("Denial of Service"),

    /**
     * Installation of malicious software (e.g., virus, worm, Trojan horse, or other code-based malicious entity) that infects an operating system or application. Agencies are NOT required to report malicious logic that has been successfully quarantined by antivirus (AV) software.
     * 
     */
    @XmlEnumValue("Malicious Code")
    MALICIOUS_CODE("Malicious Code"),

    /**
     * A person violates acceptable computing use policies.
     * 
     */
    @XmlEnumValue("Improper Usage")
    IMPROPER_USAGE("Improper Usage"),

    /**
     * This category includes any activity that seeks to access or identify a federal agency computer, open ports, protocols, service, or any combination for later exploit. This activity does not directly result in a compromise or denial of service.
     * 
     */
    @XmlEnumValue("Scans/Probes/Attempted Access")
    SCANS_PROBES_ATTEMPTED_ACCESS("Scans/Probes/Attempted Access"),

    /**
     * Unconfirmed incidents that are potentially malicious or anomalous activity deemed by the reporting entity to warrant further review.
     * 
     */
    @XmlEnumValue("Investigation")
    INVESTIGATION("Investigation");
    private final String value;

    IncidentCategoryEnum10(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static IncidentCategoryEnum10 fromValue(String v) {
        for (IncidentCategoryEnum10 c: IncidentCategoryEnum10 .values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
