//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.stix.default_vocabularies_1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AttackerToolTypeEnum-1.0.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AttackerToolTypeEnum-1.0">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Malware"/>
 *     &lt;enumeration value="Penetration Testing"/>
 *     &lt;enumeration value="Port Scanner"/>
 *     &lt;enumeration value="Traffic Scanner"/>
 *     &lt;enumeration value="Vulnerability Scanner"/>
 *     &lt;enumeration value="Application Scanner"/>
 *     &lt;enumeration value="Password Cracking"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "AttackerToolTypeEnum-1.0")
@XmlEnum
public enum AttackerToolTypeEnum10 {

    @XmlEnumValue("Malware")
    MALWARE("Malware"),
    @XmlEnumValue("Penetration Testing")
    PENETRATION_TESTING("Penetration Testing"),
    @XmlEnumValue("Port Scanner")
    PORT_SCANNER("Port Scanner"),
    @XmlEnumValue("Traffic Scanner")
    TRAFFIC_SCANNER("Traffic Scanner"),
    @XmlEnumValue("Vulnerability Scanner")
    VULNERABILITY_SCANNER("Vulnerability Scanner"),
    @XmlEnumValue("Application Scanner")
    APPLICATION_SCANNER("Application Scanner"),
    @XmlEnumValue("Password Cracking")
    PASSWORD_CRACKING("Password Cracking");
    private final String value;

    AttackerToolTypeEnum10(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AttackerToolTypeEnum10 fromValue(String v) {
        for (AttackerToolTypeEnum10 c: AttackerToolTypeEnum10 .values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
