//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.stix.common_1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DateTimePrecisionEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DateTimePrecisionEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="year"/>
 *     &lt;enumeration value="month"/>
 *     &lt;enumeration value="day"/>
 *     &lt;enumeration value="hour"/>
 *     &lt;enumeration value="minute"/>
 *     &lt;enumeration value="second"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DateTimePrecisionEnum")
@XmlEnum
public enum DateTimePrecisionEnum {


    /**
     * DateTime is precise to the given year.
     * 
     */
    @XmlEnumValue("year")
    YEAR("year"),

    /**
     * DateTime is precise to the given month.
     * 
     */
    @XmlEnumValue("month")
    MONTH("month"),

    /**
     * DateTime is precise to the given day.
     * 
     */
    @XmlEnumValue("day")
    DAY("day"),

    /**
     * DateTime is precise to the given hour.
     * 
     */
    @XmlEnumValue("hour")
    HOUR("hour"),

    /**
     * DateTime is precise to the given minute.
     * 
     */
    @XmlEnumValue("minute")
    MINUTE("minute"),

    /**
     * DateTime is precise to the given second (including fractional seconds).
     * 
     */
    @XmlEnumValue("second")
    SECOND("second");
    private final String value;

    DateTimePrecisionEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DateTimePrecisionEnum fromValue(String v) {
        for (DateTimePrecisionEnum c: DateTimePrecisionEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
