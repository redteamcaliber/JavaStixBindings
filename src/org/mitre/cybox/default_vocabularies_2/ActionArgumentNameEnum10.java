//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.cybox.default_vocabularies_2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ActionArgumentNameEnum-1.0.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ActionArgumentNameEnum-1.0">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="API"/>
 *     &lt;enumeration value="Application Name"/>
 *     &lt;enumeration value="Database Name"/>
 *     &lt;enumeration value="Privilege Name"/>
 *     &lt;enumeration value="Proxy Name"/>
 *     &lt;enumeration value="Proxy Bypass"/>
 *     &lt;enumeration value="Creation Flags"/>
 *     &lt;enumeration value="Flags"/>
 *     &lt;enumeration value="Access Mode"/>
 *     &lt;enumeration value="Share Mode"/>
 *     &lt;enumeration value="Callback Address"/>
 *     &lt;enumeration value="Source Address"/>
 *     &lt;enumeration value="Destination Address"/>
 *     &lt;enumeration value="Base Address"/>
 *     &lt;enumeration value="Starting Address"/>
 *     &lt;enumeration value="Size (bytes)"/>
 *     &lt;enumeration value="Number of Bytes Per Send"/>
 *     &lt;enumeration value="Control Parameter"/>
 *     &lt;enumeration value="Host Name"/>
 *     &lt;enumeration value="Function Name"/>
 *     &lt;enumeration value="Function Address"/>
 *     &lt;enumeration value="Options"/>
 *     &lt;enumeration value="Transfer Flags"/>
 *     &lt;enumeration value="Control Code"/>
 *     &lt;enumeration value="APC Mode"/>
 *     &lt;enumeration value="APC Address"/>
 *     &lt;enumeration value="Base Address"/>
 *     &lt;enumeration value="Protection"/>
 *     &lt;enumeration value="Target PID"/>
 *     &lt;enumeration value="Mapping Offset"/>
 *     &lt;enumeration value="File Information Class"/>
 *     &lt;enumeration value="Function Ordinal"/>
 *     &lt;enumeration value="Function Name"/>
 *     &lt;enumeration value="Hook Type"/>
 *     &lt;enumeration value="Request Size"/>
 *     &lt;enumeration value="Requested Version"/>
 *     &lt;enumeration value="Service Type"/>
 *     &lt;enumeration value="Service State"/>
 *     &lt;enumeration value="Service Name"/>
 *     &lt;enumeration value="Hostname"/>
 *     &lt;enumeration value="Shutdown Flag"/>
 *     &lt;enumeration value="Sleep Time (ms)"/>
 *     &lt;enumeration value="Delay Time (ms)"/>
 *     &lt;enumeration value="Code Address"/>
 *     &lt;enumeration value="Parameter Address"/>
 *     &lt;enumeration value="Server"/>
 *     &lt;enumeration value="Reason"/>
 *     &lt;enumeration value="System Metric Index"/>
 *     &lt;enumeration value="Initial Owner"/>
 *     &lt;enumeration value="Error Control"/>
 *     &lt;enumeration value="Username"/>
 *     &lt;enumeration value="Password"/>
 *     &lt;enumeration value="Command"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ActionArgumentNameEnum-1.0")
@XmlEnum
public enum ActionArgumentNameEnum10 {


    /**
     * Specifies an argument called API.
     * 
     */
    API("API"),

    /**
     * Specifies an argument called Application Name.
     * 
     */
    @XmlEnumValue("Application Name")
    APPLICATION_NAME("Application Name"),

    /**
     * Specifies an argument called Database Name.
     * 
     */
    @XmlEnumValue("Database Name")
    DATABASE_NAME("Database Name"),

    /**
     * Specifies an argument called Privilege Name.
     * 
     */
    @XmlEnumValue("Privilege Name")
    PRIVILEGE_NAME("Privilege Name"),

    /**
     * Specifies an argument called Proxy Name.
     * 
     */
    @XmlEnumValue("Proxy Name")
    PROXY_NAME("Proxy Name"),

    /**
     * Specifies an argument called Proxy Bypass.
     * 
     */
    @XmlEnumValue("Proxy Bypass")
    PROXY_BYPASS("Proxy Bypass"),

    /**
     * Specifies an argument called Creation Flags.
     * 
     */
    @XmlEnumValue("Creation Flags")
    CREATION_FLAGS("Creation Flags"),

    /**
     * Specifies an argument called Flags.
     * 
     */
    @XmlEnumValue("Flags")
    FLAGS("Flags"),

    /**
     * Specifies an argument called Access Mode.
     * 
     */
    @XmlEnumValue("Access Mode")
    ACCESS_MODE("Access Mode"),

    /**
     * Specifies an argument called Share Mode.
     * 
     */
    @XmlEnumValue("Share Mode")
    SHARE_MODE("Share Mode"),

    /**
     * Specifies an argument called Callback Address.
     * 
     */
    @XmlEnumValue("Callback Address")
    CALLBACK_ADDRESS("Callback Address"),

    /**
     * Specifies an argument called Source Address.
     * 
     */
    @XmlEnumValue("Source Address")
    SOURCE_ADDRESS("Source Address"),

    /**
     * Specifies an argument called Destination Address.
     * 
     */
    @XmlEnumValue("Destination Address")
    DESTINATION_ADDRESS("Destination Address"),

    /**
     * Specifies an argument called Base Address.
     * 
     */
    @XmlEnumValue("Base Address")
    BASE_ADDRESS("Base Address"),

    /**
     * Specifies an argument called Starting Address.
     * 
     */
    @XmlEnumValue("Starting Address")
    STARTING_ADDRESS("Starting Address"),

    /**
     * Specifies an argument called Size (bytes).
     * 
     */
    @XmlEnumValue("Size (bytes)")
    SIZE_BYTES("Size (bytes)"),

    /**
     * Specifies an argument called Number of Bytes Per Send.
     * 
     */
    @XmlEnumValue("Number of Bytes Per Send")
    NUMBER_OF_BYTES_PER_SEND("Number of Bytes Per Send"),

    /**
     * Specifies an argument called Control Parameter.
     * 
     */
    @XmlEnumValue("Control Parameter")
    CONTROL_PARAMETER("Control Parameter"),

    /**
     * Specifies an argument called Host Name.
     * 
     */
    @XmlEnumValue("Host Name")
    HOST_NAME("Host Name"),

    /**
     * Specifies an argument called Function Name.
     * 
     */
    @XmlEnumValue("Function Name")
    FUNCTION_NAME("Function Name"),

    /**
     * Specifies an argument called Function Address.
     * 
     */
    @XmlEnumValue("Function Address")
    FUNCTION_ADDRESS("Function Address"),

    /**
     * Specifies an argument called Options.
     * 
     */
    @XmlEnumValue("Options")
    OPTIONS("Options"),

    /**
     * Specifies an argument called Transfer Flags.
     * 
     */
    @XmlEnumValue("Transfer Flags")
    TRANSFER_FLAGS("Transfer Flags"),

    /**
     * Specifies an argument called Control Code.
     * 
     */
    @XmlEnumValue("Control Code")
    CONTROL_CODE("Control Code"),

    /**
     * Specifies an argument called APC Mode.
     * 
     */
    @XmlEnumValue("APC Mode")
    APC_MODE("APC Mode"),

    /**
     * Specifies an argument called APC Address.
     * 
     */
    @XmlEnumValue("APC Address")
    APC_ADDRESS("APC Address"),

    /**
     * Specifies an argument called Protection.
     * 
     */
    @XmlEnumValue("Protection")
    PROTECTION("Protection"),

    /**
     * Specifies an argument called Target PID.
     * 
     */
    @XmlEnumValue("Target PID")
    TARGET_PID("Target PID"),

    /**
     * Specifies an argument called Mapping Offset.
     * 
     */
    @XmlEnumValue("Mapping Offset")
    MAPPING_OFFSET("Mapping Offset"),

    /**
     * Specifies an argument called File Information Class.
     * 
     */
    @XmlEnumValue("File Information Class")
    FILE_INFORMATION_CLASS("File Information Class"),

    /**
     * Specifies an argument called Function Ordinal.
     * 
     */
    @XmlEnumValue("Function Ordinal")
    FUNCTION_ORDINAL("Function Ordinal"),

    /**
     * Specifies an argument called Hook Type.
     * 
     */
    @XmlEnumValue("Hook Type")
    HOOK_TYPE("Hook Type"),

    /**
     * Specifies an argument called Request Size.
     * 
     */
    @XmlEnumValue("Request Size")
    REQUEST_SIZE("Request Size"),

    /**
     * Specifies an argument called Requested Version.
     * 
     */
    @XmlEnumValue("Requested Version")
    REQUESTED_VERSION("Requested Version"),

    /**
     * Specifies an argument called Service Type.
     * 
     */
    @XmlEnumValue("Service Type")
    SERVICE_TYPE("Service Type"),

    /**
     * Specifies an argument called Service State.
     * 
     */
    @XmlEnumValue("Service State")
    SERVICE_STATE("Service State"),

    /**
     * Specifies an argument called Service Name.
     * 
     */
    @XmlEnumValue("Service Name")
    SERVICE_NAME("Service Name"),

    /**
     * Specifies an argument called Hostname.
     * 
     */
    @XmlEnumValue("Hostname")
    HOSTNAME("Hostname"),

    /**
     * Specifies an argument called Shutdown Flag.
     * 
     */
    @XmlEnumValue("Shutdown Flag")
    SHUTDOWN_FLAG("Shutdown Flag"),

    /**
     * Specifies an argument called Sleep Time (ms).
     * 
     */
    @XmlEnumValue("Sleep Time (ms)")
    SLEEP_TIME_MS("Sleep Time (ms)"),

    /**
     * Specifies an argument called Delay Time (ms).
     * 
     */
    @XmlEnumValue("Delay Time (ms)")
    DELAY_TIME_MS("Delay Time (ms)"),

    /**
     * Specifies an argument called Code Address.
     * 
     */
    @XmlEnumValue("Code Address")
    CODE_ADDRESS("Code Address"),

    /**
     * Specifies an argument called Parameter Address.
     * 
     */
    @XmlEnumValue("Parameter Address")
    PARAMETER_ADDRESS("Parameter Address"),

    /**
     * Specifies an argument called Server.
     * 
     */
    @XmlEnumValue("Server")
    SERVER("Server"),

    /**
     * Specifies an argument called Reason.
     * 
     */
    @XmlEnumValue("Reason")
    REASON("Reason"),

    /**
     * Specifies an argument called System Metric Index.
     * 
     */
    @XmlEnumValue("System Metric Index")
    SYSTEM_METRIC_INDEX("System Metric Index"),

    /**
     * Specifies an argument called Initial Owner.
     * 
     */
    @XmlEnumValue("Initial Owner")
    INITIAL_OWNER("Initial Owner"),

    /**
     * Specifies an argument called Initial Owner.
     * 
     */
    @XmlEnumValue("Error Control")
    ERROR_CONTROL("Error Control"),

    /**
     * Specifies an argument called Username.
     * 
     */
    @XmlEnumValue("Username")
    USERNAME("Username"),

    /**
     * Specifies an argument called Password.
     * 
     */
    @XmlEnumValue("Password")
    PASSWORD("Password"),

    /**
     * Specifies an argument called Command.
     * 
     */
    @XmlEnumValue("Command")
    COMMAND("Command");
    private final String value;

    ActionArgumentNameEnum10(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ActionArgumentNameEnum10 fromValue(String v) {
        for (ActionArgumentNameEnum10 c: ActionArgumentNameEnum10 .values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
