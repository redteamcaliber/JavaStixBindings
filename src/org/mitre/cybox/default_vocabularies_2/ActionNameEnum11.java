//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.cybox.default_vocabularies_2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ActionNameEnum-1.1.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ActionNameEnum-1.1">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Accept Socket Connection"/>
 *     &lt;enumeration value="Add Connection to Network Share"/>
 *     &lt;enumeration value="Add Network Share"/>
 *     &lt;enumeration value="Add System Call Hook"/>
 *     &lt;enumeration value="Add User"/>
 *     &lt;enumeration value="Add Windows Hook"/>
 *     &lt;enumeration value="Add Scheduled Task"/>
 *     &lt;enumeration value="Allocate Virtual Memory in Process"/>
 *     &lt;enumeration value="Bind Address to Socket"/>
 *     &lt;enumeration value="Change Service Configuration"/>
 *     &lt;enumeration value="Check for Remote Debugger"/>
 *     &lt;enumeration value="Close Port"/>
 *     &lt;enumeration value="Close Registry Key"/>
 *     &lt;enumeration value="Close Socket"/>
 *     &lt;enumeration value="Configure Service"/>
 *     &lt;enumeration value="Connect to IP"/>
 *     &lt;enumeration value="Connect to Named Pipe"/>
 *     &lt;enumeration value="Connect to Network Share"/>
 *     &lt;enumeration value="Connect to Socket"/>
 *     &lt;enumeration value="Connect to URL"/>
 *     &lt;enumeration value="Control Driver"/>
 *     &lt;enumeration value="Control Service"/>
 *     &lt;enumeration value="Copy File"/>
 *     &lt;enumeration value="Create Dialog Box"/>
 *     &lt;enumeration value="Create Directory"/>
 *     &lt;enumeration value="Create Event"/>
 *     &lt;enumeration value="Create File"/>
 *     &lt;enumeration value="Create File Alternate Data Stream"/>
 *     &lt;enumeration value="Create File Mapping"/>
 *     &lt;enumeration value="Create File Symbolic Link"/>
 *     &lt;enumeration value="Create Hidden File"/>
 *     &lt;enumeration value="Create Mailslot"/>
 *     &lt;enumeration value="Create Module"/>
 *     &lt;enumeration value="Create Mutex"/>
 *     &lt;enumeration value="Create Named Pipe"/>
 *     &lt;enumeration value="Create Process"/>
 *     &lt;enumeration value="Create Process as User"/>
 *     &lt;enumeration value="Create Registry Key"/>
 *     &lt;enumeration value="Create Registry Key Value"/>
 *     &lt;enumeration value="Create Remote Thread in Process"/>
 *     &lt;enumeration value="Create Service"/>
 *     &lt;enumeration value="Create Socket"/>
 *     &lt;enumeration value="Create Symbolic Link"/>
 *     &lt;enumeration value="Create Thread"/>
 *     &lt;enumeration value="Create Window"/>
 *     &lt;enumeration value="Delete Directory"/>
 *     &lt;enumeration value="Delete File"/>
 *     &lt;enumeration value="Delete Named Pipe"/>
 *     &lt;enumeration value="Delete Network Share"/>
 *     &lt;enumeration value="Delete Registry Key"/>
 *     &lt;enumeration value="Delete Registry Key Value"/>
 *     &lt;enumeration value="Delete Service"/>
 *     &lt;enumeration value="Delete User"/>
 *     &lt;enumeration value="Disconnect from Named Pipe"/>
 *     &lt;enumeration value="Disconnect from Network Share"/>
 *     &lt;enumeration value="Disconnect from Socket"/>
 *     &lt;enumeration value="Download File"/>
 *     &lt;enumeration value="Enumerate DLLs"/>
 *     &lt;enumeration value="Enumerate Network Shares"/>
 *     &lt;enumeration value="Enumerate Protocols"/>
 *     &lt;enumeration value="Enumerate Registry Key Subkeys"/>
 *     &lt;enumeration value="Enumerate Registry Key Values"/>
 *     &lt;enumeration value="Enumerate Threads in Process"/>
 *     &lt;enumeration value="Enumerate Processes"/>
 *     &lt;enumeration value="Enumerate Services"/>
 *     &lt;enumeration value="Enumerate System Handles"/>
 *     &lt;enumeration value="Enumerate Threads"/>
 *     &lt;enumeration value="Enumerate Users"/>
 *     &lt;enumeration value="Enumerate Windows"/>
 *     &lt;enumeration value="Find File"/>
 *     &lt;enumeration value="Find Window"/>
 *     &lt;enumeration value="Flush Process Instruction Cache"/>
 *     &lt;enumeration value="Free Library"/>
 *     &lt;enumeration value="Free Process Virtual Memory"/>
 *     &lt;enumeration value="Get Disk Free Space"/>
 *     &lt;enumeration value="Get Disk Type"/>
 *     &lt;enumeration value="Get Elapsed System Up Time"/>
 *     &lt;enumeration value="Get File Attributes"/>
 *     &lt;enumeration value="Get Function Address"/>
 *     &lt;enumeration value="Get System Global Flags"/>
 *     &lt;enumeration value="Get Host By Address"/>
 *     &lt;enumeration value="Get Host By Name"/>
 *     &lt;enumeration value="Get Host Name"/>
 *     &lt;enumeration value="Get Library File Name"/>
 *     &lt;enumeration value="Get Library Handle"/>
 *     &lt;enumeration value="Get NetBIOS Name"/>
 *     &lt;enumeration value="Get Process Current Directory"/>
 *     &lt;enumeration value="Get Process Environment Variable"/>
 *     &lt;enumeration value="Get Process Startup Information"/>
 *     &lt;enumeration value="Get Processes Snapshot"/>
 *     &lt;enumeration value="Get Registry Key Attributes"/>
 *     &lt;enumeration value="Get Service Status"/>
 *     &lt;enumeration value="Get System Global Flags"/>
 *     &lt;enumeration value="Get System Local Time"/>
 *     &lt;enumeration value="Get System Host Name"/>
 *     &lt;enumeration value="Get System NetBIOS Name"/>
 *     &lt;enumeration value="Get System Network Parameters"/>
 *     &lt;enumeration value="Get System Time"/>
 *     &lt;enumeration value="Get Thread Context"/>
 *     &lt;enumeration value="Get Thread Username"/>
 *     &lt;enumeration value="Get User Attributes"/>
 *     &lt;enumeration value="Get Username"/>
 *     &lt;enumeration value="Get Windows Directory"/>
 *     &lt;enumeration value="Get Windows System Directory"/>
 *     &lt;enumeration value="Get Windows Temporary Files Directory"/>
 *     &lt;enumeration value="Hide Window"/>
 *     &lt;enumeration value="Impersonate Process"/>
 *     &lt;enumeration value="Impersonate Thread"/>
 *     &lt;enumeration value="Inject Memory Page"/>
 *     &lt;enumeration value="Kill Process"/>
 *     &lt;enumeration value="Kill Thread"/>
 *     &lt;enumeration value="Kill Window"/>
 *     &lt;enumeration value="Listen on Port"/>
 *     &lt;enumeration value="Listen on Socket"/>
 *     &lt;enumeration value="Load and Call Driver"/>
 *     &lt;enumeration value="Load Driver"/>
 *     &lt;enumeration value="Load Library"/>
 *     &lt;enumeration value="Load Module"/>
 *     &lt;enumeration value="Lock File"/>
 *     &lt;enumeration value="Logon as User"/>
 *     &lt;enumeration value="Map File"/>
 *     &lt;enumeration value="Map Library"/>
 *     &lt;enumeration value="Map View of File"/>
 *     &lt;enumeration value="Modify File"/>
 *     &lt;enumeration value="Modify Named Pipe"/>
 *     &lt;enumeration value="Modify Process"/>
 *     &lt;enumeration value="Modify Service"/>
 *     &lt;enumeration value="Modify Registry Key"/>
 *     &lt;enumeration value="Modify Registry Key Value"/>
 *     &lt;enumeration value="Monitor Registry Key"/>
 *     &lt;enumeration value="Move File"/>
 *     &lt;enumeration value="Open File"/>
 *     &lt;enumeration value="Open File Mapping"/>
 *     &lt;enumeration value="Open Mutex"/>
 *     &lt;enumeration value="Open Port"/>
 *     &lt;enumeration value="Open Process"/>
 *     &lt;enumeration value="Open Registry Key"/>
 *     &lt;enumeration value="Open Service"/>
 *     &lt;enumeration value="Open Service Control Manager"/>
 *     &lt;enumeration value="Protect Virtual Memory"/>
 *     &lt;enumeration value="Query Disk Attributes"/>
 *     &lt;enumeration value="Query DNS"/>
 *     &lt;enumeration value="Query Process Virtual Memory"/>
 *     &lt;enumeration value="Queue APC in Thread"/>
 *     &lt;enumeration value="Read File"/>
 *     &lt;enumeration value="Read From Named Pipe"/>
 *     &lt;enumeration value="Read From Process Memory"/>
 *     &lt;enumeration value="Read Registry Key Value"/>
 *     &lt;enumeration value="Receive Data on Socket"/>
 *     &lt;enumeration value="Receive Email Message"/>
 *     &lt;enumeration value="Release Mutex"/>
 *     &lt;enumeration value="Rename File"/>
 *     &lt;enumeration value="Revert Thread to Self"/>
 *     &lt;enumeration value="Send Control Code to File"/>
 *     &lt;enumeration value="Send Control Code to Pipe"/>
 *     &lt;enumeration value="Send Control Code to Service"/>
 *     &lt;enumeration value="Send Data on Socket"/>
 *     &lt;enumeration value="Send Data to Address on Socket"/>
 *     &lt;enumeration value="Send DNS Query"/>
 *     &lt;enumeration value="Send Email Message"/>
 *     &lt;enumeration value="Send ICMP Request"/>
 *     &lt;enumeration value="Send Reverse DNS Query"/>
 *     &lt;enumeration value="Set File Attributes"/>
 *     &lt;enumeration value="Set NetBIOS Name"/>
 *     &lt;enumeration value="Set Process Current Directory"/>
 *     &lt;enumeration value="Set Process Environment Variable"/>
 *     &lt;enumeration value="Set System Global Flags"/>
 *     &lt;enumeration value="Set System Host Name"/>
 *     &lt;enumeration value="Set System Time"/>
 *     &lt;enumeration value="Set Thread Context"/>
 *     &lt;enumeration value="Show Window"/>
 *     &lt;enumeration value="Shutdown System"/>
 *     &lt;enumeration value="Sleep Process"/>
 *     &lt;enumeration value="Sleep System"/>
 *     &lt;enumeration value="Start Service"/>
 *     &lt;enumeration value="Unload Driver"/>
 *     &lt;enumeration value="Unlock File"/>
 *     &lt;enumeration value="Unmap File"/>
 *     &lt;enumeration value="Unload Module"/>
 *     &lt;enumeration value="Upload File"/>
 *     &lt;enumeration value="Write to File"/>
 *     &lt;enumeration value="Write to Process Virtual Memory"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ActionNameEnum-1.1")
@XmlEnum
public enum ActionNameEnum11 {


    /**
     * Specifies the defined action of accepting a socket connection.
     * 
     */
    @XmlEnumValue("Accept Socket Connection")
    ACCEPT_SOCKET_CONNECTION("Accept Socket Connection"),

    /**
     * Specifies the defined action of adding a connection to an existing network share.
     * 
     */
    @XmlEnumValue("Add Connection to Network Share")
    ADD_CONNECTION_TO_NETWORK_SHARE("Add Connection to Network Share"),

    /**
     * Specifies the defined action of adding a new network share.
     * 
     */
    @XmlEnumValue("Add Network Share")
    ADD_NETWORK_SHARE("Add Network Share"),

    /**
     * Specifies the defined action of adding a new system call hook.
     * 
     */
    @XmlEnumValue("Add System Call Hook")
    ADD_SYSTEM_CALL_HOOK("Add System Call Hook"),

    /**
     * Specifies the defined action of adding a new user.
     * 
     */
    @XmlEnumValue("Add User")
    ADD_USER("Add User"),

    /**
     * Specifies the defined action of adding a new Windows hook.
     * 
     */
    @XmlEnumValue("Add Windows Hook")
    ADD_WINDOWS_HOOK("Add Windows Hook"),

    /**
     * Specifies the defined action of adding a scheduled task.
     * 
     */
    @XmlEnumValue("Add Scheduled Task")
    ADD_SCHEDULED_TASK("Add Scheduled Task"),

    /**
     * Specifies the defined action of allocating virtual memory in a process.
     * 
     */
    @XmlEnumValue("Allocate Virtual Memory in Process")
    ALLOCATE_VIRTUAL_MEMORY_IN_PROCESS("Allocate Virtual Memory in Process"),

    /**
     * Specifies the defined action of binding an address to a socket.
     * 
     */
    @XmlEnumValue("Bind Address to Socket")
    BIND_ADDRESS_TO_SOCKET("Bind Address to Socket"),

    /**
     * Specifies the defined action of changing the service configuration.
     * 
     */
    @XmlEnumValue("Change Service Configuration")
    CHANGE_SERVICE_CONFIGURATION("Change Service Configuration"),

    /**
     * Specifies the defined action of checking for a remote debugger.
     * 
     */
    @XmlEnumValue("Check for Remote Debugger")
    CHECK_FOR_REMOTE_DEBUGGER("Check for Remote Debugger"),

    /**
     * Specifies the defined action of closing a port.
     * 
     */
    @XmlEnumValue("Close Port")
    CLOSE_PORT("Close Port"),

    /**
     * Specifies the defined action of closing a registry key.
     * 
     */
    @XmlEnumValue("Close Registry Key")
    CLOSE_REGISTRY_KEY("Close Registry Key"),

    /**
     * Specifies the defined action of closing a socket.
     * 
     */
    @XmlEnumValue("Close Socket")
    CLOSE_SOCKET("Close Socket"),

    /**
     * Specifies the defined action of configuring a service.
     * 
     */
    @XmlEnumValue("Configure Service")
    CONFIGURE_SERVICE("Configure Service"),

    /**
     * Specifies the defined action of connecting to an IP address.
     * 
     */
    @XmlEnumValue("Connect to IP")
    CONNECT_TO_IP("Connect to IP"),

    /**
     * Specifies the defined action of connecting to a named pipe.
     * 
     */
    @XmlEnumValue("Connect to Named Pipe")
    CONNECT_TO_NAMED_PIPE("Connect to Named Pipe"),

    /**
     * Specifies the defined action of connecting to a network share.
     * 
     */
    @XmlEnumValue("Connect to Network Share")
    CONNECT_TO_NETWORK_SHARE("Connect to Network Share"),

    /**
     * Specifies the defined action of connecting to a socket.
     * 
     */
    @XmlEnumValue("Connect to Socket")
    CONNECT_TO_SOCKET("Connect to Socket"),

    /**
     * Specifies the defined action of connecting to a URL.
     * 
     */
    @XmlEnumValue("Connect to URL")
    CONNECT_TO_URL("Connect to URL"),

    /**
     * Specifies the defined action of controlling a driver.
     * 
     */
    @XmlEnumValue("Control Driver")
    CONTROL_DRIVER("Control Driver"),

    /**
     * Specifies the defined action of controlling a service.
     * 
     */
    @XmlEnumValue("Control Service")
    CONTROL_SERVICE("Control Service"),

    /**
     * Specifies the defined action of copying a file.
     * 
     */
    @XmlEnumValue("Copy File")
    COPY_FILE("Copy File"),

    /**
     * Specifies the defined action of creating a dialog box.
     * 
     */
    @XmlEnumValue("Create Dialog Box")
    CREATE_DIALOG_BOX("Create Dialog Box"),

    /**
     * Specifies the defined action of creating a new directory.
     * 
     */
    @XmlEnumValue("Create Directory")
    CREATE_DIRECTORY("Create Directory"),

    /**
     * Specifies the defined action of creating an event.
     * 
     */
    @XmlEnumValue("Create Event")
    CREATE_EVENT("Create Event"),

    /**
     * Specifies the defined action of creating a file.
     * 
     */
    @XmlEnumValue("Create File")
    CREATE_FILE("Create File"),

    /**
     * Specifies the defined action of creating an alternate data stream in a file.
     * 
     */
    @XmlEnumValue("Create File Alternate Data Stream")
    CREATE_FILE_ALTERNATE_DATA_STREAM("Create File Alternate Data Stream"),

    /**
     * Specifies the defined action of creating a new file mapping.
     * 
     */
    @XmlEnumValue("Create File Mapping")
    CREATE_FILE_MAPPING("Create File Mapping"),

    /**
     * Specifies the defined action of creating a file symbolic link.
     * 
     */
    @XmlEnumValue("Create File Symbolic Link")
    CREATE_FILE_SYMBOLIC_LINK("Create File Symbolic Link"),

    /**
     * Specifies the defined action of creating a hidden file.
     * 
     */
    @XmlEnumValue("Create Hidden File")
    CREATE_HIDDEN_FILE("Create Hidden File"),

    /**
     * Specifies the defined action of creating a mailslot.
     * 
     */
    @XmlEnumValue("Create Mailslot")
    CREATE_MAILSLOT("Create Mailslot"),

    /**
     * Specifies the defined action of creating a module.
     * 
     */
    @XmlEnumValue("Create Module")
    CREATE_MODULE("Create Module"),

    /**
     * Specifies the defined action of creating a mutex.
     * 
     */
    @XmlEnumValue("Create Mutex")
    CREATE_MUTEX("Create Mutex"),

    /**
     * Specifies the defined action of creating a named pipe.
     * 
     */
    @XmlEnumValue("Create Named Pipe")
    CREATE_NAMED_PIPE("Create Named Pipe"),

    /**
     * Specifies the defined action of creating a process.
     * 
     */
    @XmlEnumValue("Create Process")
    CREATE_PROCESS("Create Process"),

    /**
     * Specifies the defined action of creating a process as user.
     * 
     */
    @XmlEnumValue("Create Process as User")
    CREATE_PROCESS_AS_USER("Create Process as User"),

    /**
     * Specifies the defined action of creating a registry key.
     * 
     */
    @XmlEnumValue("Create Registry Key")
    CREATE_REGISTRY_KEY("Create Registry Key"),

    /**
     * Specifies the defined action of creating a registry key value.
     * 
     */
    @XmlEnumValue("Create Registry Key Value")
    CREATE_REGISTRY_KEY_VALUE("Create Registry Key Value"),

    /**
     * Specifies the defined action of creating a remote thread in a process.
     * 
     */
    @XmlEnumValue("Create Remote Thread in Process")
    CREATE_REMOTE_THREAD_IN_PROCESS("Create Remote Thread in Process"),

    /**
     * Specifies the defined action of creating a service.
     * 
     */
    @XmlEnumValue("Create Service")
    CREATE_SERVICE("Create Service"),

    /**
     * Specifies the defined action of creating a socket.
     * 
     */
    @XmlEnumValue("Create Socket")
    CREATE_SOCKET("Create Socket"),

    /**
     * Specifies the defined action of creating a symbolic link.
     * 
     */
    @XmlEnumValue("Create Symbolic Link")
    CREATE_SYMBOLIC_LINK("Create Symbolic Link"),

    /**
     * Specifies the defined action of creating a thread.
     * 
     */
    @XmlEnumValue("Create Thread")
    CREATE_THREAD("Create Thread"),

    /**
     * Specifies the defined action of creating a window.
     * 
     */
    @XmlEnumValue("Create Window")
    CREATE_WINDOW("Create Window"),

    /**
     * Specifies the defined action of deleting a directory.
     * 
     */
    @XmlEnumValue("Delete Directory")
    DELETE_DIRECTORY("Delete Directory"),

    /**
     * Specifies the defined action of deleting a file.
     * 
     */
    @XmlEnumValue("Delete File")
    DELETE_FILE("Delete File"),

    /**
     * Specifies the defined action of deleting a named pipe.
     * 
     */
    @XmlEnumValue("Delete Named Pipe")
    DELETE_NAMED_PIPE("Delete Named Pipe"),

    /**
     * Specifies the defined action of deleting a network share.
     * 
     */
    @XmlEnumValue("Delete Network Share")
    DELETE_NETWORK_SHARE("Delete Network Share"),

    /**
     * Specifies the defined action of deleting a registry key.
     * 
     */
    @XmlEnumValue("Delete Registry Key")
    DELETE_REGISTRY_KEY("Delete Registry Key"),

    /**
     * Specifies the defined action of deleting a registry key value.
     * 
     */
    @XmlEnumValue("Delete Registry Key Value")
    DELETE_REGISTRY_KEY_VALUE("Delete Registry Key Value"),

    /**
     * Specifies the defined action of deleting a service.
     * 
     */
    @XmlEnumValue("Delete Service")
    DELETE_SERVICE("Delete Service"),

    /**
     * Specifies the defined action of deleting a user.
     * 
     */
    @XmlEnumValue("Delete User")
    DELETE_USER("Delete User"),

    /**
     * Specifies the defined action of disconnecting from a named pipe.
     * 
     */
    @XmlEnumValue("Disconnect from Named Pipe")
    DISCONNECT_FROM_NAMED_PIPE("Disconnect from Named Pipe"),

    /**
     * Specifies the defined action of disconnecting from a network share.
     * 
     */
    @XmlEnumValue("Disconnect from Network Share")
    DISCONNECT_FROM_NETWORK_SHARE("Disconnect from Network Share"),

    /**
     * Specifies the defined action of disconnecting from a socket.
     * 
     */
    @XmlEnumValue("Disconnect from Socket")
    DISCONNECT_FROM_SOCKET("Disconnect from Socket"),

    /**
     * Specifies the defined action of downloading a file.
     * 
     */
    @XmlEnumValue("Download File")
    DOWNLOAD_FILE("Download File"),

    /**
     * Specifies the defined action of enumerating DLLs.
     * 
     */
    @XmlEnumValue("Enumerate DLLs")
    ENUMERATE_DL_LS("Enumerate DLLs"),

    /**
     * Specifies the defined action of enumerating network shares.
     * 
     */
    @XmlEnumValue("Enumerate Network Shares")
    ENUMERATE_NETWORK_SHARES("Enumerate Network Shares"),

    /**
     * Specifies the defined action of enumerating protocols.
     * 
     */
    @XmlEnumValue("Enumerate Protocols")
    ENUMERATE_PROTOCOLS("Enumerate Protocols"),

    /**
     * Specifies the defined action of enumerating registry key subkeys.
     * 
     */
    @XmlEnumValue("Enumerate Registry Key Subkeys")
    ENUMERATE_REGISTRY_KEY_SUBKEYS("Enumerate Registry Key Subkeys"),

    /**
     * Specifies the defined action of enumerating registry key values.
     * 
     */
    @XmlEnumValue("Enumerate Registry Key Values")
    ENUMERATE_REGISTRY_KEY_VALUES("Enumerate Registry Key Values"),

    /**
     * Specifies the defined action of enumerating threads in a process.
     * 
     */
    @XmlEnumValue("Enumerate Threads in Process")
    ENUMERATE_THREADS_IN_PROCESS("Enumerate Threads in Process"),

    /**
     * Specifies the defined action of enumerating processes.
     * 
     */
    @XmlEnumValue("Enumerate Processes")
    ENUMERATE_PROCESSES("Enumerate Processes"),

    /**
     * Specifies the defined action of enumerating services.
     * 
     */
    @XmlEnumValue("Enumerate Services")
    ENUMERATE_SERVICES("Enumerate Services"),

    /**
     * Specifies the defined action of enumerating system handles.
     * 
     */
    @XmlEnumValue("Enumerate System Handles")
    ENUMERATE_SYSTEM_HANDLES("Enumerate System Handles"),

    /**
     * Specifies the defined action of enumerating threads.
     * 
     */
    @XmlEnumValue("Enumerate Threads")
    ENUMERATE_THREADS("Enumerate Threads"),

    /**
     * Specifies the defined action of enumerating users.
     * 
     */
    @XmlEnumValue("Enumerate Users")
    ENUMERATE_USERS("Enumerate Users"),

    /**
     * Specifies the defined action of enumerating windows.
     * 
     */
    @XmlEnumValue("Enumerate Windows")
    ENUMERATE_WINDOWS("Enumerate Windows"),

    /**
     * Specifies the defined action of finding a file.
     * 
     */
    @XmlEnumValue("Find File")
    FIND_FILE("Find File"),

    /**
     * Specifies the defined action of finding a window.
     * 
     */
    @XmlEnumValue("Find Window")
    FIND_WINDOW("Find Window"),

    /**
     * Specifies the defined action of flushing the Process Instruction Cache.
     * 
     */
    @XmlEnumValue("Flush Process Instruction Cache")
    FLUSH_PROCESS_INSTRUCTION_CACHE("Flush Process Instruction Cache"),

    /**
     * Specifies the defined action of freeing a library.
     * 
     */
    @XmlEnumValue("Free Library")
    FREE_LIBRARY("Free Library"),

    /**
     * Specifies the defined action of freeing virtual memory from a process.
     * 
     */
    @XmlEnumValue("Free Process Virtual Memory")
    FREE_PROCESS_VIRTUAL_MEMORY("Free Process Virtual Memory"),

    /**
     * Specifies the defined action of getting the amount of free space available on a disk.
     * 
     */
    @XmlEnumValue("Get Disk Free Space")
    GET_DISK_FREE_SPACE("Get Disk Free Space"),

    /**
     * Specifies the defined action of getting the disk type.
     * 
     */
    @XmlEnumValue("Get Disk Type")
    GET_DISK_TYPE("Get Disk Type"),

    /**
     * Specifies the defined action of getting the elapsed system up-time.
     * 
     */
    @XmlEnumValue("Get Elapsed System Up Time")
    GET_ELAPSED_SYSTEM_UP_TIME("Get Elapsed System Up Time"),

    /**
     * Specifies the defined action of getting file attributes.
     * 
     */
    @XmlEnumValue("Get File Attributes")
    GET_FILE_ATTRIBUTES("Get File Attributes"),

    /**
     * Specifies the defined action of getting the function address.
     * 
     */
    @XmlEnumValue("Get Function Address")
    GET_FUNCTION_ADDRESS("Get Function Address"),

    /**
     * Specifies the defined action of getting system global flags.
     * 
     */
    @XmlEnumValue("Get System Global Flags")
    GET_SYSTEM_GLOBAL_FLAGS("Get System Global Flags"),

    /**
     * Specifies the defined action of getting host by address.
     * 
     */
    @XmlEnumValue("Get Host By Address")
    GET_HOST_BY_ADDRESS("Get Host By Address"),

    /**
     * Specifies the defined action of getting host by name.
     * 
     */
    @XmlEnumValue("Get Host By Name")
    GET_HOST_BY_NAME("Get Host By Name"),

    /**
     * Specifies the defined action of getting the host name.
     * 
     */
    @XmlEnumValue("Get Host Name")
    GET_HOST_NAME("Get Host Name"),

    /**
     * Specifies the defined action of getting the library file name.
     * 
     */
    @XmlEnumValue("Get Library File Name")
    GET_LIBRARY_FILE_NAME("Get Library File Name"),

    /**
     * Specifies the defined action of getting the library handle.
     * 
     */
    @XmlEnumValue("Get Library Handle")
    GET_LIBRARY_HANDLE("Get Library Handle"),

    /**
     * Specifies the defined action of getting the NetBIOS name.
     * 
     */
    @XmlEnumValue("Get NetBIOS Name")
    GET_NET_BIOS_NAME("Get NetBIOS Name"),

    /**
     * Specifies the defined action of getting the process's current directory.
     * 
     */
    @XmlEnumValue("Get Process Current Directory")
    GET_PROCESS_CURRENT_DIRECTORY("Get Process Current Directory"),

    /**
     * Specifies the defined action of getting the process environment variable.
     * 
     */
    @XmlEnumValue("Get Process Environment Variable")
    GET_PROCESS_ENVIRONMENT_VARIABLE("Get Process Environment Variable"),

    /**
     * Specifies the defined action of getting the process startup information.
     * 
     */
    @XmlEnumValue("Get Process Startup Information")
    GET_PROCESS_STARTUP_INFORMATION("Get Process Startup Information"),

    /**
     * Specifies the defined action of getting the processes snapshot.
     * 
     */
    @XmlEnumValue("Get Processes Snapshot")
    GET_PROCESSES_SNAPSHOT("Get Processes Snapshot"),

    /**
     * Specifies the defined action of getting the attributes of a registry key.
     * 
     */
    @XmlEnumValue("Get Registry Key Attributes")
    GET_REGISTRY_KEY_ATTRIBUTES("Get Registry Key Attributes"),

    /**
     * Specifies the defined action of getting the service status.
     * 
     */
    @XmlEnumValue("Get Service Status")
    GET_SERVICE_STATUS("Get Service Status"),

    /**
     * Specifies the defined action of getting the local time on a system.
     * 
     */
    @XmlEnumValue("Get System Local Time")
    GET_SYSTEM_LOCAL_TIME("Get System Local Time"),

    /**
     * Specifies the defined action of getting the system host name.
     * 
     */
    @XmlEnumValue("Get System Host Name")
    GET_SYSTEM_HOST_NAME("Get System Host Name"),

    /**
     * Specifies the defined action of getting the NetBIOS name of a system.
     * 
     */
    @XmlEnumValue("Get System NetBIOS Name")
    GET_SYSTEM_NET_BIOS_NAME("Get System NetBIOS Name"),

    /**
     * Specifies the defined action of getting the system network parameters.
     * 
     */
    @XmlEnumValue("Get System Network Parameters")
    GET_SYSTEM_NETWORK_PARAMETERS("Get System Network Parameters"),

    /**
     * Specifies the defined action of getting the system time.
     * 
     */
    @XmlEnumValue("Get System Time")
    GET_SYSTEM_TIME("Get System Time"),

    /**
     * Specifies the defined action of getting the thread context.
     * 
     */
    @XmlEnumValue("Get Thread Context")
    GET_THREAD_CONTEXT("Get Thread Context"),

    /**
     * Specifies the defined action of getting the thread username.
     * 
     */
    @XmlEnumValue("Get Thread Username")
    GET_THREAD_USERNAME("Get Thread Username"),

    /**
     * Specifies the defined action of getting the attributes of a user.
     * 
     */
    @XmlEnumValue("Get User Attributes")
    GET_USER_ATTRIBUTES("Get User Attributes"),

    /**
     * Specifies the defined action of getting a username.
     * 
     */
    @XmlEnumValue("Get Username")
    GET_USERNAME("Get Username"),

    /**
     * Specifies the defined action of getting a windows directory.
     * 
     */
    @XmlEnumValue("Get Windows Directory")
    GET_WINDOWS_DIRECTORY("Get Windows Directory"),

    /**
     * Specifies the defined action of getting a windows System directory.
     * 
     */
    @XmlEnumValue("Get Windows System Directory")
    GET_WINDOWS_SYSTEM_DIRECTORY("Get Windows System Directory"),

    /**
     * Specifies the defined action of getting the Windows Temporary Files Directory.
     * 
     */
    @XmlEnumValue("Get Windows Temporary Files Directory")
    GET_WINDOWS_TEMPORARY_FILES_DIRECTORY("Get Windows Temporary Files Directory"),

    /**
     * Specifies the defined action of hiding a window.
     * 
     */
    @XmlEnumValue("Hide Window")
    HIDE_WINDOW("Hide Window"),

    /**
     * Specifies the defined action of impersonating a process.
     * 
     */
    @XmlEnumValue("Impersonate Process")
    IMPERSONATE_PROCESS("Impersonate Process"),

    /**
     * Specifies the defined action of impersonating a thread.
     * 
     */
    @XmlEnumValue("Impersonate Thread")
    IMPERSONATE_THREAD("Impersonate Thread"),

    /**
     * Specifies the defined action of injecting a memory page into a process.
     * 
     */
    @XmlEnumValue("Inject Memory Page")
    INJECT_MEMORY_PAGE("Inject Memory Page"),

    /**
     * Specifies the defined action of killing a process.
     * 
     */
    @XmlEnumValue("Kill Process")
    KILL_PROCESS("Kill Process"),

    /**
     * Specifies the defined action of killing a thread.
     * 
     */
    @XmlEnumValue("Kill Thread")
    KILL_THREAD("Kill Thread"),

    /**
     * Specifies the defined action of killing a window.
     * 
     */
    @XmlEnumValue("Kill Window")
    KILL_WINDOW("Kill Window"),

    /**
     * Specifies the defined action of listening on a specific port.
     * 
     */
    @XmlEnumValue("Listen on Port")
    LISTEN_ON_PORT("Listen on Port"),

    /**
     * Specifies the defined action of listening on a socket.
     * 
     */
    @XmlEnumValue("Listen on Socket")
    LISTEN_ON_SOCKET("Listen on Socket"),

    /**
     * Specifies the defined action of loading and calling a driver.
     * 
     */
    @XmlEnumValue("Load and Call Driver")
    LOAD_AND_CALL_DRIVER("Load and Call Driver"),

    /**
     * Specifies the defined action of loading a driver.
     * 
     */
    @XmlEnumValue("Load Driver")
    LOAD_DRIVER("Load Driver"),

    /**
     * Specifies the defined action of loading a library.
     * 
     */
    @XmlEnumValue("Load Library")
    LOAD_LIBRARY("Load Library"),

    /**
     * Specifies the defined action of loading a module.
     * 
     */
    @XmlEnumValue("Load Module")
    LOAD_MODULE("Load Module"),

    /**
     * Specifies the defined action of locking a file.
     * 
     */
    @XmlEnumValue("Lock File")
    LOCK_FILE("Lock File"),

    /**
     * Specifies the defined action of logging on as a user.
     * 
     */
    @XmlEnumValue("Logon as User")
    LOGON_AS_USER("Logon as User"),

    /**
     * Specifies the defined action of mapping a file.
     * 
     */
    @XmlEnumValue("Map File")
    MAP_FILE("Map File"),

    /**
     * Specifies the defined action of mapping a library.
     * 
     */
    @XmlEnumValue("Map Library")
    MAP_LIBRARY("Map Library"),

    /**
     * Specifies the defined action of mapping a view of a file.
     * 
     */
    @XmlEnumValue("Map View of File")
    MAP_VIEW_OF_FILE("Map View of File"),

    /**
     * Specifies the defined action of modifying a file.
     * 
     */
    @XmlEnumValue("Modify File")
    MODIFY_FILE("Modify File"),

    /**
     * Specifies the defined action of modifying a named pipe.
     * 
     */
    @XmlEnumValue("Modify Named Pipe")
    MODIFY_NAMED_PIPE("Modify Named Pipe"),

    /**
     * Specifies the defined action of modifying a process.
     * 
     */
    @XmlEnumValue("Modify Process")
    MODIFY_PROCESS("Modify Process"),

    /**
     * Specifies the defined action of modifying a service.
     * 
     */
    @XmlEnumValue("Modify Service")
    MODIFY_SERVICE("Modify Service"),

    /**
     * Specifies the defined action of modifying a registry key.
     * 
     */
    @XmlEnumValue("Modify Registry Key")
    MODIFY_REGISTRY_KEY("Modify Registry Key"),

    /**
     * Specifies the defined action of modifying a registry key value.
     * 
     */
    @XmlEnumValue("Modify Registry Key Value")
    MODIFY_REGISTRY_KEY_VALUE("Modify Registry Key Value"),

    /**
     * Specifies the defined action of monitoring a registry key.
     * 
     */
    @XmlEnumValue("Monitor Registry Key")
    MONITOR_REGISTRY_KEY("Monitor Registry Key"),

    /**
     * Specifies the defined action of moving a file.
     * 
     */
    @XmlEnumValue("Move File")
    MOVE_FILE("Move File"),

    /**
     * Specifies the defined action of opening a file.
     * 
     */
    @XmlEnumValue("Open File")
    OPEN_FILE("Open File"),

    /**
     * Specifies the defined action of opening a file mapping.
     * 
     */
    @XmlEnumValue("Open File Mapping")
    OPEN_FILE_MAPPING("Open File Mapping"),

    /**
     * Specifies the defined action of opening a mutex.
     * 
     */
    @XmlEnumValue("Open Mutex")
    OPEN_MUTEX("Open Mutex"),

    /**
     * Specifies the defined action of opening a port.
     * 
     */
    @XmlEnumValue("Open Port")
    OPEN_PORT("Open Port"),

    /**
     * Specifies the defined action of opening a process.
     * 
     */
    @XmlEnumValue("Open Process")
    OPEN_PROCESS("Open Process"),

    /**
     * Specifies the defined action of opening a registry key.
     * 
     */
    @XmlEnumValue("Open Registry Key")
    OPEN_REGISTRY_KEY("Open Registry Key"),

    /**
     * Specifies the defined action of opening a service.
     * 
     */
    @XmlEnumValue("Open Service")
    OPEN_SERVICE("Open Service"),

    /**
     * Specifies the defined action of opening a service control manager.
     * 
     */
    @XmlEnumValue("Open Service Control Manager")
    OPEN_SERVICE_CONTROL_MANAGER("Open Service Control Manager"),

    /**
     * Specifies the defined action of protecting virtual memory.
     * 
     */
    @XmlEnumValue("Protect Virtual Memory")
    PROTECT_VIRTUAL_MEMORY("Protect Virtual Memory"),

    /**
     * Specifies the defined action of querying disk attributes.
     * 
     */
    @XmlEnumValue("Query Disk Attributes")
    QUERY_DISK_ATTRIBUTES("Query Disk Attributes"),

    /**
     * Specifies the defined action of querying DNS.
     * 
     */
    @XmlEnumValue("Query DNS")
    QUERY_DNS("Query DNS"),

    /**
     * Specifies the defined action of querying process virtual memory.
     * 
     */
    @XmlEnumValue("Query Process Virtual Memory")
    QUERY_PROCESS_VIRTUAL_MEMORY("Query Process Virtual Memory"),

    /**
     * Specifies the defined action of querying the Asynchronous Procedure Call (APC) in the context of a thread.
     * 
     */
    @XmlEnumValue("Queue APC in Thread")
    QUEUE_APC_IN_THREAD("Queue APC in Thread"),

    /**
     * Specifies the defined action of reading a file.
     * 
     */
    @XmlEnumValue("Read File")
    READ_FILE("Read File"),

    /**
     * Specifies the defined action of reading from a named pipe.
     * 
     */
    @XmlEnumValue("Read From Named Pipe")
    READ_FROM_NAMED_PIPE("Read From Named Pipe"),

    /**
     * Specifies the defined action of reading from process memory.
     * 
     */
    @XmlEnumValue("Read From Process Memory")
    READ_FROM_PROCESS_MEMORY("Read From Process Memory"),

    /**
     * Specifies the defined action of reading a registry key value.
     * 
     */
    @XmlEnumValue("Read Registry Key Value")
    READ_REGISTRY_KEY_VALUE("Read Registry Key Value"),

    /**
     * Specifies the defined action of receiving data on a socket.
     * 
     */
    @XmlEnumValue("Receive Data on Socket")
    RECEIVE_DATA_ON_SOCKET("Receive Data on Socket"),

    /**
     * Specifies the defined action of receiving an email message.
     * 
     */
    @XmlEnumValue("Receive Email Message")
    RECEIVE_EMAIL_MESSAGE("Receive Email Message"),

    /**
     * Specifies the defined action of releasing a mutex.
     * 
     */
    @XmlEnumValue("Release Mutex")
    RELEASE_MUTEX("Release Mutex"),

    /**
     * Specifies the defined action of renaming a file.
     * 
     */
    @XmlEnumValue("Rename File")
    RENAME_FILE("Rename File"),

    /**
     * Specifies the defined action of reverting a thread to its self.
     * 
     */
    @XmlEnumValue("Revert Thread to Self")
    REVERT_THREAD_TO_SELF("Revert Thread to Self"),

    /**
     * Specifies the defined action of sending a control code to a file.
     * 
     */
    @XmlEnumValue("Send Control Code to File")
    SEND_CONTROL_CODE_TO_FILE("Send Control Code to File"),

    /**
     * Specifies the defined action of sending a control code to a pipe.
     * 
     */
    @XmlEnumValue("Send Control Code to Pipe")
    SEND_CONTROL_CODE_TO_PIPE("Send Control Code to Pipe"),

    /**
     * Specifies the defined action of sending control code to a service.
     * 
     */
    @XmlEnumValue("Send Control Code to Service")
    SEND_CONTROL_CODE_TO_SERVICE("Send Control Code to Service"),

    /**
     * Specifies the defined action of sending data on a socket.
     * 
     */
    @XmlEnumValue("Send Data on Socket")
    SEND_DATA_ON_SOCKET("Send Data on Socket"),

    /**
     * Specifies the defined action of sending data to the address on a socket.
     * 
     */
    @XmlEnumValue("Send Data to Address on Socket")
    SEND_DATA_TO_ADDRESS_ON_SOCKET("Send Data to Address on Socket"),

    /**
     * Specifies the defined action of sending a DNS query.
     * 
     */
    @XmlEnumValue("Send DNS Query")
    SEND_DNS_QUERY("Send DNS Query"),

    /**
     * Specifies the defined action of sending an email message.
     * 
     */
    @XmlEnumValue("Send Email Message")
    SEND_EMAIL_MESSAGE("Send Email Message"),

    /**
     * Specifies the defined action of sending an ICMP request.
     * 
     */
    @XmlEnumValue("Send ICMP Request")
    SEND_ICMP_REQUEST("Send ICMP Request"),

    /**
     * Specifies the defined action of sending a reverse DNS query.
     * 
     */
    @XmlEnumValue("Send Reverse DNS Query")
    SEND_REVERSE_DNS_QUERY("Send Reverse DNS Query"),

    /**
     * Specifies the defined action of setting file attributes.
     * 
     */
    @XmlEnumValue("Set File Attributes")
    SET_FILE_ATTRIBUTES("Set File Attributes"),

    /**
     * Specifies the defined action of setting the NetBIOS name.
     * 
     */
    @XmlEnumValue("Set NetBIOS Name")
    SET_NET_BIOS_NAME("Set NetBIOS Name"),

    /**
     * Specifies the defined action of setting the process current directory.
     * 
     */
    @XmlEnumValue("Set Process Current Directory")
    SET_PROCESS_CURRENT_DIRECTORY("Set Process Current Directory"),

    /**
     * Specifies the defined action of setting the process environment variable.
     * 
     */
    @XmlEnumValue("Set Process Environment Variable")
    SET_PROCESS_ENVIRONMENT_VARIABLE("Set Process Environment Variable"),

    /**
     * Specifies the defined action of setting system global flags.
     * 
     */
    @XmlEnumValue("Set System Global Flags")
    SET_SYSTEM_GLOBAL_FLAGS("Set System Global Flags"),

    /**
     * Specifies the defined action of setting the system host name.
     * 
     */
    @XmlEnumValue("Set System Host Name")
    SET_SYSTEM_HOST_NAME("Set System Host Name"),

    /**
     * Specifies the defined action of setting the system time.
     * 
     */
    @XmlEnumValue("Set System Time")
    SET_SYSTEM_TIME("Set System Time"),

    /**
     * Specifies the defined action of setting the thread context.
     * 
     */
    @XmlEnumValue("Set Thread Context")
    SET_THREAD_CONTEXT("Set Thread Context"),

    /**
     * Specifies the defined action of showing a window.
     * 
     */
    @XmlEnumValue("Show Window")
    SHOW_WINDOW("Show Window"),

    /**
     * Specifies the defined action of shutting down a system.
     * 
     */
    @XmlEnumValue("Shutdown System")
    SHUTDOWN_SYSTEM("Shutdown System"),

    /**
     * Specifies the defined action of sleeping a process.
     * 
     */
    @XmlEnumValue("Sleep Process")
    SLEEP_PROCESS("Sleep Process"),

    /**
     * Specifies the defined action of sleeping a system.
     * 
     */
    @XmlEnumValue("Sleep System")
    SLEEP_SYSTEM("Sleep System"),

    /**
     * Specifies the defined action of starting a service.
     * 
     */
    @XmlEnumValue("Start Service")
    START_SERVICE("Start Service"),

    /**
     * Specifies the defined action of unloading a driver.
     * 
     */
    @XmlEnumValue("Unload Driver")
    UNLOAD_DRIVER("Unload Driver"),

    /**
     * Specifies the defined action of unlocking a file.
     * 
     */
    @XmlEnumValue("Unlock File")
    UNLOCK_FILE("Unlock File"),

    /**
     * Specifies the defined action of unmapping a file.
     * 
     */
    @XmlEnumValue("Unmap File")
    UNMAP_FILE("Unmap File"),

    /**
     * Specifies the defined action of unloading a module.
     * 
     */
    @XmlEnumValue("Unload Module")
    UNLOAD_MODULE("Unload Module"),

    /**
     * Specifies the defined action of uploading a file.
     * 
     */
    @XmlEnumValue("Upload File")
    UPLOAD_FILE("Upload File"),

    /**
     * Specifies the defined action of writing to a file.
     * 
     */
    @XmlEnumValue("Write to File")
    WRITE_TO_FILE("Write to File"),

    /**
     * Specifies the defined action of writing to process virtual memory.
     * 
     */
    @XmlEnumValue("Write to Process Virtual Memory")
    WRITE_TO_PROCESS_VIRTUAL_MEMORY("Write to Process Virtual Memory");
    private final String value;

    ActionNameEnum11(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ActionNameEnum11 fromValue(String v) {
        for (ActionNameEnum11 c: ActionNameEnum11 .values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
