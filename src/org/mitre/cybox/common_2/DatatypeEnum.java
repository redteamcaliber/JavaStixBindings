//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.cybox.common_2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DatatypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DatatypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="string"/>
 *     &lt;enumeration value="int"/>
 *     &lt;enumeration value="float"/>
 *     &lt;enumeration value="date"/>
 *     &lt;enumeration value="positiveInteger"/>
 *     &lt;enumeration value="unsignedInt"/>
 *     &lt;enumeration value="dateTime"/>
 *     &lt;enumeration value="time"/>
 *     &lt;enumeration value="boolean"/>
 *     &lt;enumeration value="name"/>
 *     &lt;enumeration value="long"/>
 *     &lt;enumeration value="unsignedLong"/>
 *     &lt;enumeration value="duration"/>
 *     &lt;enumeration value="double"/>
 *     &lt;enumeration value="nonNegativeInteger"/>
 *     &lt;enumeration value="hexBinary"/>
 *     &lt;enumeration value="anyURI"/>
 *     &lt;enumeration value="base64Binary"/>
 *     &lt;enumeration value="IPv4 Address"/>
 *     &lt;enumeration value="IPv6 Address"/>
 *     &lt;enumeration value="Host Name"/>
 *     &lt;enumeration value="MAC Address"/>
 *     &lt;enumeration value="Domain Name"/>
 *     &lt;enumeration value="URI"/>
 *     &lt;enumeration value="TimeZone"/>
 *     &lt;enumeration value="Octal"/>
 *     &lt;enumeration value="Binary"/>
 *     &lt;enumeration value="BinHex"/>
 *     &lt;enumeration value="Subnet Mask"/>
 *     &lt;enumeration value="UUID/GUID"/>
 *     &lt;enumeration value="Collection"/>
 *     &lt;enumeration value="CVE ID"/>
 *     &lt;enumeration value="CWE ID"/>
 *     &lt;enumeration value="CAPEC ID"/>
 *     &lt;enumeration value="CCE ID"/>
 *     &lt;enumeration value="CPE Name"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DatatypeEnum")
@XmlEnum
public enum DatatypeEnum {


    /**
     * Specifies the string datatype as it applies to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#string for more information.
     * 
     */
    @XmlEnumValue("string")
    STRING("string"),

    /**
     * Specifies the int datatype as it applies to the W3C standard for int. See http://www.w3.org/TR/xmlschema-2/#int for more information.
     * 
     */
    @XmlEnumValue("int")
    INT("int"),

    /**
     * Specifies the float datatype as it apples to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#float for more information.
     * 
     */
    @XmlEnumValue("float")
    FLOAT("float"),

    /**
     * Specifies a date, which is usually in the form yyyy-mm--dd as it applies to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#date for more information.
     * 
     */
    @XmlEnumValue("date")
    DATE("date"),

    /**
     * Specifies a positive integer in the infinite set {1,2,...} as it applies to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#positiveInteger for more information.
     * 
     */
    @XmlEnumValue("positiveInteger")
    POSITIVE_INTEGER("positiveInteger"),

    /**
     * Specifies an unsigned integer, which is a nonnegative integer in the set {0,1,2,...,4294967295} as it applies to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#unsignedInt for more information.
     * 
     */
    @XmlEnumValue("unsignedInt")
    UNSIGNED_INT("unsignedInt"),

    /**
     * Specifies a date in full format including both date and time as it applies to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#dateTime for more information.
     * 
     */
    @XmlEnumValue("dateTime")
    DATE_TIME("dateTime"),

    /**
     * Specifies a time as it applies to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#time for more information.
     * 
     */
    @XmlEnumValue("time")
    TIME("time"),

    /**
     * Specifies a boolean value in the set {true,false,1,0} as it applies to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#boolean for more information.
     * 
     */
    @XmlEnumValue("boolean")
    BOOLEAN("boolean"),

    /**
     * Specifies a name (which represents XML Names) as it applies to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#Name and http://www.w3.org/TR/2000/WD-xml-2e-20000814#dt-name for more information.
     * 
     */
    @XmlEnumValue("name")
    NAME("name"),

    /**
     * Specifies a long integer, which is an integer whose maximum value is 9223372036854775807 and minimum value is -9223372036854775808 as it applies to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#long for more information.
     * 
     */
    @XmlEnumValue("long")
    LONG("long"),

    /**
     * Specifies an unsigned long integer, which is an integer whose maximum value is 18446744073709551615 and minimum value is 0 as it applies to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#unsignedLong for more information.
     * 
     */
    @XmlEnumValue("unsignedLong")
    UNSIGNED_LONG("unsignedLong"),

    /**
     * Specifies a length of time in the extended format PnYn MnDTnH nMnS, where nY represents the number of years, nM the number of months, nD the number of days, 'T' is the date/time separator, nH the number of hours, nM the number of minutes and nS the number of seconds, as it applies to the W3 standard. See http://www.w3.org/TR/xmlschema-2/#duration for more information.
     * 
     */
    @XmlEnumValue("duration")
    DURATION("duration"),

    /**
     * Specifies a decimal of datatype double as it is patterned after the IEEE double-precision 64-bit floating point type (IEEE 754-1985) and as it applies to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#double for more information.
     * 
     */
    @XmlEnumValue("double")
    DOUBLE("double"),

    /**
     * Specifies a non-negative integer in the infinite set {0,1,2,...} as it applies to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#nonNegativeInteger for more information.
     * 
     */
    @XmlEnumValue("nonNegativeInteger")
    NON_NEGATIVE_INTEGER("nonNegativeInteger"),

    /**
     * Specifies arbitrary hex-encoded binary data as it applies to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#hexBinary for more information.
     * 
     */
    @XmlEnumValue("hexBinary")
    HEX_BINARY("hexBinary"),

    /**
     * Specifies a Uniform Resource Identifier Reference (URI) as it applies to the W3C standard and to RFC 2396, as amended by RFC 2732. See http://www.w3.org/TR/xmlschema-2/#anyURI for more information.
     * 
     */
    @XmlEnumValue("anyURI")
    ANY_URI("anyURI"),

    /**
     * Specifies base64-encoded arbitrary binary data as it applies to the W3C standard. See http://www.w3.org/TR/xmlschema-2/#base64Binary for more information.
     * 
     */
    @XmlEnumValue("base64Binary")
    BASE_64_BINARY("base64Binary"),

    /**
     * Specifies an IPV4 address in dotted decimal form. CIDR notation is also accepted.
     * 
     */
    @XmlEnumValue("IPv4 Address")
    I_PV_4_ADDRESS("IPv4 Address"),

    /**
     * Specifies an IPV6 address, which is represented by eight groups of 16-bit hexadecimal values separated by colons (:) in the form a:b:c:d:e:f:g:h. CIDR notation is also accepted.
     * 
     */
    @XmlEnumValue("IPv6 Address")
    I_PV_6_ADDRESS("IPv6 Address"),

    /**
     * Specifies a host name. For compatibility reasons, this could be any string. Even so, it is best to use the proper notation for the given host type. For example, web hostnames should be written as fully qualified hostnames in practice.
     * 
     */
    @XmlEnumValue("Host Name")
    HOST_NAME("Host Name"),

    /**
     * Specifies a MAC address, which is represented by six groups of 2 hexdecimal digits, separated by hyphens (-) or colons (:) in transmission order.
     * 
     */
    @XmlEnumValue("MAC Address")
    MAC_ADDRESS("MAC Address"),

    /**
     * Specifies a domain name, which is represented by a series of labels concatenated with dots conforming to the rules in RFC 1035, RFC 1123, and RFC 2181.
     * 
     */
    @XmlEnumValue("Domain Name")
    DOMAIN_NAME("Domain Name"),

    /**
     * Specifies a Uniform Resource Identifier, which identifies a name or resource and can act as a URL or URN.
     * 
     */
    URI("URI"),

    /**
     * Specifies a timezone in UTC notation (UTC+number).
     * 
     */
    @XmlEnumValue("TimeZone")
    TIME_ZONE("TimeZone"),

    /**
     * Specifies arbitrary octal (base-8) encoded data.
     * 
     */
    @XmlEnumValue("Octal")
    OCTAL("Octal"),

    /**
     * Specifies arbitrary binary encoded data.
     * 
     */
    @XmlEnumValue("Binary")
    BINARY("Binary"),

    /**
     * Specifies arbitrary data encoded in the Mac OS-originated BinHex format.
     * 
     */
    @XmlEnumValue("BinHex")
    BIN_HEX("BinHex"),

    /**
     * Specifies a subnet mask in IPv4 or IPv6 notation.
     * 
     */
    @XmlEnumValue("Subnet Mask")
    SUBNET_MASK("Subnet Mask"),

    /**
     * Specifies a globally/universally unique ID represented as a 32-character hexadecimal string. See ISO/IEC 11578:1996 Information technology -- Open Systems Interconnection -- Remote Procedure Call - http://www.iso.ch/cate/d2229.html.
     * 
     */
    @XmlEnumValue("UUID/GUID")
    UUID_GUID("UUID/GUID"),

    /**
     * Specifies data represented as a container of multiple data of a shared elemental type.
     * 
     */
    @XmlEnumValue("Collection")
    COLLECTION("Collection"),

    /**
     * Specifies a CVE ID, expressed as CVE- appended by a four-digit integer, a - and another four-digit integer, as in CVE-2012-1234.
     * 
     */
    @XmlEnumValue("CVE ID")
    CVE_ID("CVE ID"),

    /**
     * Specifies a CWE ID, expressed as CWE- appended by an integer.
     * 
     */
    @XmlEnumValue("CWE ID")
    CWE_ID("CWE ID"),

    /**
     * Specifies a CAPEC ID, expressed as CAPEC- appended by an integer.
     * 
     */
    @XmlEnumValue("CAPEC ID")
    CAPEC_ID("CAPEC ID"),

    /**
     * Specifies a CCE ID, expressed as CCE- appended by an integer.
     * 
     */
    @XmlEnumValue("CCE ID")
    CCE_ID("CCE ID"),

    /**
     * Specifies a CPE Name. See http://cpe.mitre.org/specification/archive/version2.0/cpe-specification_2.0.pdf for more information.
     * 
     */
    @XmlEnumValue("CPE Name")
    CPE_NAME("CPE Name");
    private final String value;

    DatatypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DatatypeEnum fromValue(String v) {
        for (DatatypeEnum c: DatatypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
