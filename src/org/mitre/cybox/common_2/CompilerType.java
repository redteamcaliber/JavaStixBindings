//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.cybox.common_2;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * The CompilerType describes a single compiler utilized during this build of this application.
 * 
 * <p>Java class for CompilerType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CompilerType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Compiler_Informal_Description" type="{http://cybox.mitre.org/common-2}CompilerInformalDescriptionType" minOccurs="0"/>
 *         &lt;element name="Compiler_Platform_Specification" type="{http://cybox.mitre.org/common-2}PlatformSpecificationType" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CompilerType", propOrder = {
    "compilerInformalDescription",
    "compilerPlatformSpecification"
})
public class CompilerType {

    @XmlElement(name = "Compiler_Informal_Description")
    protected CompilerInformalDescriptionType compilerInformalDescription;
    @XmlElement(name = "Compiler_Platform_Specification")
    protected PlatformSpecificationType compilerPlatformSpecification;

    /**
     * Gets the value of the compilerInformalDescription property.
     * 
     * @return
     *     possible object is
     *     {@link CompilerInformalDescriptionType }
     *     
     */
    public CompilerInformalDescriptionType getCompilerInformalDescription() {
        return compilerInformalDescription;
    }

    /**
     * Sets the value of the compilerInformalDescription property.
     * 
     * @param value
     *     allowed object is
     *     {@link CompilerInformalDescriptionType }
     *     
     */
    public void setCompilerInformalDescription(CompilerInformalDescriptionType value) {
        this.compilerInformalDescription = value;
    }

    /**
     * Gets the value of the compilerPlatformSpecification property.
     * 
     * @return
     *     possible object is
     *     {@link PlatformSpecificationType }
     *     
     */
    public PlatformSpecificationType getCompilerPlatformSpecification() {
        return compilerPlatformSpecification;
    }

    /**
     * Sets the value of the compilerPlatformSpecification property.
     * 
     * @param value
     *     allowed object is
     *     {@link PlatformSpecificationType }
     *     
     */
    public void setCompilerPlatformSpecification(PlatformSpecificationType value) {
        this.compilerPlatformSpecification = value;
    }

}
