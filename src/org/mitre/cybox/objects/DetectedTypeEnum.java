//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.cybox.objects;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DetectedTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DetectedTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="None"/>
 *     &lt;enumeration value="Compiler"/>
 *     &lt;enumeration value="Packer"/>
 *     &lt;enumeration value="Installer"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DetectedTypeEnum", namespace = "http://cybox.mitre.org/objects#FileObject-2")
@XmlEnum
public enum DetectedTypeEnum {


    /**
     * Specifies a type other than those listed.
     * 
     */
    @XmlEnumValue("None")
    NONE("None"),

    /**
     * Specifies an executable that acts as a compiler.
     * 
     */
    @XmlEnumValue("Compiler")
    COMPILER("Compiler"),

    /**
     * Specifies an executable that acts as a packer.
     * 
     */
    @XmlEnumValue("Packer")
    PACKER("Packer"),

    /**
     * Specifies an executable that acts as an installer.
     * 
     */
    @XmlEnumValue("Installer")
    INSTALLER("Installer");
    private final String value;

    DetectedTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DetectedTypeEnum fromValue(String v) {
        for (DetectedTypeEnum c: DetectedTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
