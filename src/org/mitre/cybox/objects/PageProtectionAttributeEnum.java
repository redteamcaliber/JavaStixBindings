//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.cybox.objects;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PageProtectionAttributeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PageProtectionAttributeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="SEC_COMMIT"/>
 *     &lt;enumeration value="SEC_IMAGE"/>
 *     &lt;enumeration value="SEC_IMAGE_NO_EXECUTE"/>
 *     &lt;enumeration value="SEC_LARGE_PAGES"/>
 *     &lt;enumeration value="SEC_NOCACHE"/>
 *     &lt;enumeration value="SEC_RESERVE"/>
 *     &lt;enumeration value="SEC_WRITECOMBINE"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PageProtectionAttributeEnum", namespace = "http://cybox.mitre.org/objects#WinFilemappingObject-1")
@XmlEnum
public enum PageProtectionAttributeEnum {


    /**
     * Specifies that if the file mapping is backed by the operating system paging file, that when a view of the file is mapped into a process address space, the entire range of pages is committed rather than reserved.
     * 
     */
    SEC_COMMIT,

    /**
     * Specifies that the file mapped by the file mapping is an executable image file.
     * 
     */
    SEC_IMAGE,

    /**
     * Specifies that the file mapped by the file mapping is an executable image file that will not be executed and the loaded image file will have no forced integrity checks run.
     * 
     */
    SEC_IMAGE_NO_EXECUTE,

    /**
     * Enables large pages to be used for file mapping objects that are backed by the operating system paging file.
     * 
     */
    SEC_LARGE_PAGES,

    /**
     * Sets all pages to be non-cachable.
     * 
     */
    SEC_NOCACHE,

    /**
     * Specifies that when a view of the file is mapped into a process address space, the entire range of pages is reserved for later use by the process rather than committed. Only valid if the file mapping is backed by the operating system paging file.
     * 
     */
    SEC_RESERVE,

    /**
     * Sets all pages to be write-combined.
     * 
     */
    SEC_WRITECOMBINE;

    public String value() {
        return name();
    }

    public static PageProtectionAttributeEnum fromValue(String v) {
        return valueOf(v);
    }

}
