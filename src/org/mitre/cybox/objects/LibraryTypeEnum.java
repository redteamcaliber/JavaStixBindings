//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.cybox.objects;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for LibraryTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="LibraryTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Dynamic"/>
 *     &lt;enumeration value="Static"/>
 *     &lt;enumeration value="Remote"/>
 *     &lt;enumeration value="Shared"/>
 *     &lt;enumeration value="Other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "LibraryTypeEnum", namespace = "http://cybox.mitre.org/objects#LibraryObject-2")
@XmlEnum
public enum LibraryTypeEnum {


    /**
     * Indicates a dynamic library.
     * 
     */
    @XmlEnumValue("Dynamic")
    DYNAMIC("Dynamic"),

    /**
     * Indicates a static library.
     * 
     */
    @XmlEnumValue("Static")
    STATIC("Static"),

    /**
     * Indicates a remote library.
     * 
     */
    @XmlEnumValue("Remote")
    REMOTE("Remote"),

    /**
     * Indicates a shared library.
     * 
     */
    @XmlEnumValue("Shared")
    SHARED("Shared"),

    /**
     * Indicates a different type of library than those listed above.
     * 
     */
    @XmlEnumValue("Other")
    OTHER("Other");
    private final String value;

    LibraryTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LibraryTypeEnum fromValue(String v) {
        for (LibraryTypeEnum c: LibraryTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
