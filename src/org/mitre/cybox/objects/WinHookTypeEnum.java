//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.cybox.objects;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for WinHookTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="WinHookTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="WH_CALLWNDPROC"/>
 *     &lt;enumeration value="WH_CALLWNDPROCRET"/>
 *     &lt;enumeration value="WH_CBT"/>
 *     &lt;enumeration value="WH_DEBUG"/>
 *     &lt;enumeration value="WH_FOREGROUNDIDLE"/>
 *     &lt;enumeration value="WH_GETMESSAGE"/>
 *     &lt;enumeration value="WH_JOURNALPLAYBACK"/>
 *     &lt;enumeration value="WH_JOURNALRECORD"/>
 *     &lt;enumeration value="WH_KEYBOARD"/>
 *     &lt;enumeration value="WH_KEYBOARD_LL"/>
 *     &lt;enumeration value="WH_MOUSE"/>
 *     &lt;enumeration value="WH_MOUSE_LL"/>
 *     &lt;enumeration value="WH_MSGFILTER"/>
 *     &lt;enumeration value="WH_SHELL"/>
 *     &lt;enumeration value="WH_SYSMSGFILTER"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "WinHookTypeEnum", namespace = "http://cybox.mitre.org/objects#WinHookObject-1")
@XmlEnum
public enum WinHookTypeEnum {


    /**
     * Specifies a hook procedure that monitors messages before the system sends them to the destination window procedure.
     * 
     */
    WH_CALLWNDPROC,

    /**
     * Specifies a hook procedure that monitors messages after they have been processed by the destination window procedure.
     * 
     */
    WH_CALLWNDPROCRET,

    /**
     * Specifies a hook procedure that receives notifications useful to a CBT application.
     * 
     */
    WH_CBT,

    /**
     * Specifies a hook procedure useful for debugging other hook procedures.
     * 
     */
    WH_DEBUG,

    /**
     * Specifies a hook procedure that will be called when the application's foreground thread is about to become idle.
     * 
     */
    WH_FOREGROUNDIDLE,

    /**
     * Specifies a hook procedure that monitors messages posted to a message queue.
     * 
     */
    WH_GETMESSAGE,

    /**
     * Specifies a hook procedure that posts messages previously recorded by a WH_JOURNALRECORD hook procedure.
     * 
     */
    WH_JOURNALPLAYBACK,

    /**
     * Specifies a hook procedure that records input messages posted to the system message queue.
     * 
     */
    WH_JOURNALRECORD,

    /**
     * Specifies a hook procedure that monitors keystroke messages.
     * 
     */
    WH_KEYBOARD,

    /**
     * Specifies a hook procedure that monitors low-level keyboard input events.
     * 
     */
    WH_KEYBOARD_LL,

    /**
     * Specifies a hook procedure that monitors mouse messages.
     * 
     */
    WH_MOUSE,

    /**
     * Specifies a hook procedure that monitors low-level mouse input events.
     * 
     */
    WH_MOUSE_LL,

    /**
     * Specifies a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar.
     * 
     */
    WH_MSGFILTER,

    /**
     * Specifies a hook procedure that receives notifications useful to shell applications.
     * 
     */
    WH_SHELL,

    /**
     * Specifies a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar.
     * 
     */
    WH_SYSMSGFILTER;

    public String value() {
        return name();
    }

    public static WinHookTypeEnum fromValue(String v) {
        return valueOf(v);
    }

}
