//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.cybox.objects;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for WindowsVolumeAttributeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="WindowsVolumeAttributeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="ReadOnly"/>
 *     &lt;enumeration value="Hidden"/>
 *     &lt;enumeration value="NoDefaultDriveLetter"/>
 *     &lt;enumeration value="ShadowCopy"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "WindowsVolumeAttributeEnum", namespace = "http://cybox.mitre.org/objects#WinVolumeObject-2")
@XmlEnum
public enum WindowsVolumeAttributeEnum {


    /**
     * Specifies that the volume is read-only.
     * 
     */
    @XmlEnumValue("ReadOnly")
    READ_ONLY("ReadOnly"),

    /**
     * Specifies that the volume is hidden.
     * 
     */
    @XmlEnumValue("Hidden")
    HIDDEN("Hidden"),

    /**
     * Specifies that the volume does not receive a drive letter by default.
     * 
     */
    @XmlEnumValue("NoDefaultDriveLetter")
    NO_DEFAULT_DRIVE_LETTER("NoDefaultDriveLetter"),

    /**
     * Specifies that the volume is a shadow copy volume.
     * 
     */
    @XmlEnumValue("ShadowCopy")
    SHADOW_COPY("ShadowCopy");
    private final String value;

    WindowsVolumeAttributeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static WindowsVolumeAttributeEnum fromValue(String v) {
        for (WindowsVolumeAttributeEnum c: WindowsVolumeAttributeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
