//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.cybox.objects;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for NetflowV9FieldTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="NetflowV9FieldTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="IN_BYTES(1)"/>
 *     &lt;enumeration value="IN_PKTS(2)"/>
 *     &lt;enumeration value="FLOWS(3)"/>
 *     &lt;enumeration value="PROTOCOL(4)"/>
 *     &lt;enumeration value="SRC_TOS(5)"/>
 *     &lt;enumeration value="TCP_FLAGS(6)"/>
 *     &lt;enumeration value="L4_SRC_PORT(7)"/>
 *     &lt;enumeration value="IPV4_SRC_ADDR(8)"/>
 *     &lt;enumeration value="SRC_MASK(9)"/>
 *     &lt;enumeration value="INPUT_SNMP(10)"/>
 *     &lt;enumeration value="L4_DST_PORT(11)"/>
 *     &lt;enumeration value="IPV4_DST_ADDR(12)"/>
 *     &lt;enumeration value="DST_MASK(13)"/>
 *     &lt;enumeration value="OUTPUT_SNMP(14)"/>
 *     &lt;enumeration value="IPV4_NEXT_HOP(15)"/>
 *     &lt;enumeration value="SRC_AS(16)"/>
 *     &lt;enumeration value="DST_AS(17)"/>
 *     &lt;enumeration value="BGP_IPV4_NEXT_HOP(18)"/>
 *     &lt;enumeration value="MUL_DST_PKTS(19)"/>
 *     &lt;enumeration value="MUL_DST_BYTES(20)"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "NetflowV9FieldTypeEnum", namespace = "http://cybox.mitre.org/objects#NetworkFlowObject-2")
@XmlEnum
public enum NetflowV9FieldTypeEnum {


    /**
     * The IN_BYTES(1) field represents the incoming counter with length N x 8 bits for number of bytes associated with an IP Flow.
     * 
     */
    @XmlEnumValue("IN_BYTES(1)")
    IN_BYTES_1("IN_BYTES(1)"),

    /**
     * The IN_PKTS(2) field represents the incoming counter with length N x 8 bits for the number of packets associated with an IP Flow.
     * 
     */
    @XmlEnumValue("IN_PKTS(2)")
    IN_PKTS_2("IN_PKTS(2)"),

    /**
     * The FLOWS(3) field represents the number of flows that were aggregated; default for N is 4.
     * 
     */
    @XmlEnumValue("FLOWS(3)")
    FLOWS_3("FLOWS(3)"),

    /**
     * The PROTOCOL(4) field represents the IP protocol byte.
     * 
     */
    @XmlEnumValue("PROTOCOL(4)")
    PROTOCOL_4("PROTOCOL(4)"),

    /**
     * The TOS(5) field represents the Type of Service byte setting when entering incoming interface.
     * 
     */
    @XmlEnumValue("SRC_TOS(5)")
    SRC_TOS_5("SRC_TOS(5)"),

    /**
     * The TCP_FLAGS(6) field is cumulative of all the TCP flags seen for this flow.
     * 
     */
    @XmlEnumValue("TCP_FLAGS(6)")
    TCP_FLAGS_6("TCP_FLAGS(6)"),

    /**
     * The L4_SRC_PORT(7) field represents the TCP/UDP source port number i.e.: FTP, Telnet, or equivalent.
     * 
     */
    @XmlEnumValue("L4_SRC_PORT(7)")
    L_4_SRC_PORT_7("L4_SRC_PORT(7)"),

    /**
     * The IPV4_SRC_ADDR(8) field represents the IPv4 source address.
     * 
     */
    @XmlEnumValue("IPV4_SRC_ADDR(8)")
    IPV_4_SRC_ADDR_8("IPV4_SRC_ADDR(8)"),

    /**
     * The SRC_MASK(9) field represents the number of contiguous bits in the source address subnet mask i.e.: the submask in slash notation.
     * 
     */
    @XmlEnumValue("SRC_MASK(9)")
    SRC_MASK_9("SRC_MASK(9)"),

    /**
     * The INPUT_SNMP(10) field represents the number of contiguous bits in the source address subnet mask i.e.: the submask in slash notation.
     * 
     */
    @XmlEnumValue("INPUT_SNMP(10)")
    INPUT_SNMP_10("INPUT_SNMP(10)"),

    /**
     * The LP_DST_PORT(11) field represents the TCP/UDP destination port number i.e.: FTP, Telnet, or equivalent.
     * 
     */
    @XmlEnumValue("L4_DST_PORT(11)")
    L_4_DST_PORT_11("L4_DST_PORT(11)"),

    /**
     * The IPV4_DST_ADDR(12) field represents the IPv4 destination address.
     * 
     */
    @XmlEnumValue("IPV4_DST_ADDR(12)")
    IPV_4_DST_ADDR_12("IPV4_DST_ADDR(12)"),

    /**
     * The DST_MASK(13) field represents the number of contiguous bits in the destination address subnet mask i.e.: the submask in slash notation.
     * 
     */
    @XmlEnumValue("DST_MASK(13)")
    DST_MASK_13("DST_MASK(13)"),

    /**
     * The OUTPUT_SNMP(14) field represents the output interface index; default for N is 2 but higher values could be used.
     * 
     */
    @XmlEnumValue("OUTPUT_SNMP(14)")
    OUTPUT_SNMP_14("OUTPUT_SNMP(14)"),

    /**
     * The IPV4_NEXT_HOP(15) field represents the IPv4 address of next-hop router.
     * 
     */
    @XmlEnumValue("IPV4_NEXT_HOP(15)")
    IPV_4_NEXT_HOP_15("IPV4_NEXT_HOP(15)"),

    /**
     * The SRC_AS(16) field represents the source BGP autonomous system number where N could be 2 or 4.
     * 
     */
    @XmlEnumValue("SRC_AS(16)")
    SRC_AS_16("SRC_AS(16)"),

    /**
     * The DST_AS(17) field represents the destination BGP autonomous system number where N could be 2 or 4.
     * 
     */
    @XmlEnumValue("DST_AS(17)")
    DST_AS_17("DST_AS(17)"),

    /**
     * The BGP_IPV4_NEXT_HOP(18) field represents the next-hop router's IP in the BGP domain.
     * 
     */
    @XmlEnumValue("BGP_IPV4_NEXT_HOP(18)")
    BGP_IPV_4_NEXT_HOP_18("BGP_IPV4_NEXT_HOP(18)"),

    /**
     * The MUL_DST_PKTS(19) field represents the IP multicast outgoing packet counter with length N x 8 bits for packets associated with the IP Flow.
     * 
     */
    @XmlEnumValue("MUL_DST_PKTS(19)")
    MUL_DST_PKTS_19("MUL_DST_PKTS(19)"),

    /**
     * The MUL_DST_BYTES(20) field represents the IP multicast outgoing byte counter with length N x 8 bits for bytes associated with the IP Flow.
     * 
     */
    @XmlEnumValue("MUL_DST_BYTES(20)")
    MUL_DST_BYTES_20("MUL_DST_BYTES(20)");
    private final String value;

    NetflowV9FieldTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static NetflowV9FieldTypeEnum fromValue(String v) {
        for (NetflowV9FieldTypeEnum c: NetflowV9FieldTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
