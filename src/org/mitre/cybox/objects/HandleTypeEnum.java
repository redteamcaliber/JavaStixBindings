//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.25 at 01:41:27 PM EDT 
//


package org.mitre.cybox.objects;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for HandleTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="HandleTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="AccessToken"/>
 *     &lt;enumeration value="Event"/>
 *     &lt;enumeration value="File"/>
 *     &lt;enumeration value="FileMapping"/>
 *     &lt;enumeration value="Job"/>
 *     &lt;enumeration value="IOCompletionPort"/>
 *     &lt;enumeration value="Mailslot"/>
 *     &lt;enumeration value="Mutex"/>
 *     &lt;enumeration value="NamedPipe"/>
 *     &lt;enumeration value="Pipe"/>
 *     &lt;enumeration value="Process"/>
 *     &lt;enumeration value="Semaphore"/>
 *     &lt;enumeration value="Thread"/>
 *     &lt;enumeration value="Transaction"/>
 *     &lt;enumeration value="WaitableTimer"/>
 *     &lt;enumeration value="RegistryKey"/>
 *     &lt;enumeration value="Window"/>
 *     &lt;enumeration value="ServiceControlManager"/>
 *     &lt;enumeration value="CommunicationsDevice"/>
 *     &lt;enumeration value="ConsoleInput"/>
 *     &lt;enumeration value="ConsoleScreenBuffer"/>
 *     &lt;enumeration value="MemoryResourceNotification"/>
 *     &lt;enumeration value="Directory"/>
 *     &lt;enumeration value="SymbolicLink"/>
 *     &lt;enumeration value="Token"/>
 *     &lt;enumeration value="Profile"/>
 *     &lt;enumeration value="WindowStation"/>
 *     &lt;enumeration value="Port"/>
 *     &lt;enumeration value="WaitablePort"/>
 *     &lt;enumeration value="Controller"/>
 *     &lt;enumeration value="Driver"/>
 *     &lt;enumeration value="Desktop"/>
 *     &lt;enumeration value="Adapter"/>
 *     &lt;enumeration value="Bitmap"/>
 *     &lt;enumeration value="Brush"/>
 *     &lt;enumeration value="ColorSpace"/>
 *     &lt;enumeration value="Cursor"/>
 *     &lt;enumeration value="DeviceContext"/>
 *     &lt;enumeration value="EnhancedMetafile"/>
 *     &lt;enumeration value="Font"/>
 *     &lt;enumeration value="GDIObject"/>
 *     &lt;enumeration value="Hook"/>
 *     &lt;enumeration value="Icon"/>
 *     &lt;enumeration value="Instance"/>
 *     &lt;enumeration value="Menu"/>
 *     &lt;enumeration value="Metafile"/>
 *     &lt;enumeration value="DisplayMonitor"/>
 *     &lt;enumeration value="Palette"/>
 *     &lt;enumeration value="Pen"/>
 *     &lt;enumeration value="Region"/>
 *     &lt;enumeration value="Resource"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "HandleTypeEnum", namespace = "http://cybox.mitre.org/objects#WinHandleObject-2")
@XmlEnum
public enum HandleTypeEnum {


    /**
     * Specifies an access token handle.
     * 
     */
    @XmlEnumValue("AccessToken")
    ACCESS_TOKEN("AccessToken"),

    /**
     * Specifies an event handle.
     * 
     */
    @XmlEnumValue("Event")
    EVENT("Event"),

    /**
     * Specifies a file handle.
     * 
     */
    @XmlEnumValue("File")
    FILE("File"),

    /**
     * Specifies a file mapping handle.
     * 
     */
    @XmlEnumValue("FileMapping")
    FILE_MAPPING("FileMapping"),

    /**
     * Specifies a job handle.
     * 
     */
    @XmlEnumValue("Job")
    JOB("Job"),

    /**
     * Specifies an IO completion port handle.
     * 
     */
    @XmlEnumValue("IOCompletionPort")
    IO_COMPLETION_PORT("IOCompletionPort"),

    /**
     * Specifies a mailslot handle.
     * 
     */
    @XmlEnumValue("Mailslot")
    MAILSLOT("Mailslot"),

    /**
     * Specifies a mutex handle.
     * 
     */
    @XmlEnumValue("Mutex")
    MUTEX("Mutex"),

    /**
     * Specifies a named pipe handle.
     * 
     */
    @XmlEnumValue("NamedPipe")
    NAMED_PIPE("NamedPipe"),

    /**
     * Specifies a pipe handle.
     * 
     */
    @XmlEnumValue("Pipe")
    PIPE("Pipe"),

    /**
     * Specifies a process handle.
     * 
     */
    @XmlEnumValue("Process")
    PROCESS("Process"),

    /**
     * Specifies a semaphore handle.
     * 
     */
    @XmlEnumValue("Semaphore")
    SEMAPHORE("Semaphore"),

    /**
     * Specifies a thread handle.
     * 
     */
    @XmlEnumValue("Thread")
    THREAD("Thread"),

    /**
     * Specifies a transaction handle.
     * 
     */
    @XmlEnumValue("Transaction")
    TRANSACTION("Transaction"),

    /**
     * Specifies a waitable timer handle.
     * 
     */
    @XmlEnumValue("WaitableTimer")
    WAITABLE_TIMER("WaitableTimer"),

    /**
     * Specifies a registry key handle.
     * 
     */
    @XmlEnumValue("RegistryKey")
    REGISTRY_KEY("RegistryKey"),

    /**
     * Specifies a window handle.
     * 
     */
    @XmlEnumValue("Window")
    WINDOW("Window"),

    /**
     * Specifies a service control manager handle.
     * 
     */
    @XmlEnumValue("ServiceControlManager")
    SERVICE_CONTROL_MANAGER("ServiceControlManager"),

    /**
     * Specifies a communications device handle.
     * 
     */
    @XmlEnumValue("CommunicationsDevice")
    COMMUNICATIONS_DEVICE("CommunicationsDevice"),

    /**
     * Specifies a console input handle.
     * 
     */
    @XmlEnumValue("ConsoleInput")
    CONSOLE_INPUT("ConsoleInput"),

    /**
     * Specifies a console screen buffer handle.
     * 
     */
    @XmlEnumValue("ConsoleScreenBuffer")
    CONSOLE_SCREEN_BUFFER("ConsoleScreenBuffer"),

    /**
     * Specifies a memory resource notification handle.
     * 
     */
    @XmlEnumValue("MemoryResourceNotification")
    MEMORY_RESOURCE_NOTIFICATION("MemoryResourceNotification"),

    /**
     * Specifies a directory handle.
     * 
     */
    @XmlEnumValue("Directory")
    DIRECTORY("Directory"),

    /**
     * Specifies a symbolic link handle.
     * 
     */
    @XmlEnumValue("SymbolicLink")
    SYMBOLIC_LINK("SymbolicLink"),

    /**
     * Specifies a token handle.
     * 
     */
    @XmlEnumValue("Token")
    TOKEN("Token"),

    /**
     * Specifies a profile handle.
     * 
     */
    @XmlEnumValue("Profile")
    PROFILE("Profile"),

    /**
     * Specifies a window station handle.
     * 
     */
    @XmlEnumValue("WindowStation")
    WINDOW_STATION("WindowStation"),

    /**
     * Specifies a port handle.
     * 
     */
    @XmlEnumValue("Port")
    PORT("Port"),

    /**
     * Specifies a waitable port handle.
     * 
     */
    @XmlEnumValue("WaitablePort")
    WAITABLE_PORT("WaitablePort"),

    /**
     * Specifies a controller handle.
     * 
     */
    @XmlEnumValue("Controller")
    CONTROLLER("Controller"),

    /**
     * Specifies a driver handle.
     * 
     */
    @XmlEnumValue("Driver")
    DRIVER("Driver"),

    /**
     * Specifies a desktop handle.
     * 
     */
    @XmlEnumValue("Desktop")
    DESKTOP("Desktop"),

    /**
     * Specifies an adapter handle.
     * 
     */
    @XmlEnumValue("Adapter")
    ADAPTER("Adapter"),

    /**
     * Specifies a bitmap handle.
     * 
     */
    @XmlEnumValue("Bitmap")
    BITMAP("Bitmap"),

    /**
     * Specifies a brush handle.
     * 
     */
    @XmlEnumValue("Brush")
    BRUSH("Brush"),

    /**
     * Specifies a color space handle.
     * 
     */
    @XmlEnumValue("ColorSpace")
    COLOR_SPACE("ColorSpace"),

    /**
     * Specifies a cursor handle.
     * 
     */
    @XmlEnumValue("Cursor")
    CURSOR("Cursor"),

    /**
     * Specifies a device context handle.
     * 
     */
    @XmlEnumValue("DeviceContext")
    DEVICE_CONTEXT("DeviceContext"),

    /**
     * Specifies an enhanced metafile handle.
     * 
     */
    @XmlEnumValue("EnhancedMetafile")
    ENHANCED_METAFILE("EnhancedMetafile"),

    /**
     * Specifies a font handle.
     * 
     */
    @XmlEnumValue("Font")
    FONT("Font"),

    /**
     * Specifies a GDI object handle.
     * 
     */
    @XmlEnumValue("GDIObject")
    GDI_OBJECT("GDIObject"),

    /**
     * Specifies a hook handle.
     * 
     */
    @XmlEnumValue("Hook")
    HOOK("Hook"),

    /**
     * Specifies an icon handle.
     * 
     */
    @XmlEnumValue("Icon")
    ICON("Icon"),

    /**
     * Specifies a module instance handle.
     * 
     */
    @XmlEnumValue("Instance")
    INSTANCE("Instance"),

    /**
     * Specifies a menu handle.
     * 
     */
    @XmlEnumValue("Menu")
    MENU("Menu"),

    /**
     * Specifies a metafile handle.
     * 
     */
    @XmlEnumValue("Metafile")
    METAFILE("Metafile"),

    /**
     * Specifies a display monitor handle.
     * 
     */
    @XmlEnumValue("DisplayMonitor")
    DISPLAY_MONITOR("DisplayMonitor"),

    /**
     * Specifies a palette handle.
     * 
     */
    @XmlEnumValue("Palette")
    PALETTE("Palette"),

    /**
     * Specifies a pen handle.
     * 
     */
    @XmlEnumValue("Pen")
    PEN("Pen"),

    /**
     * Specifies a region handle.
     * 
     */
    @XmlEnumValue("Region")
    REGION("Region"),

    /**
     * Specifies a resource handle.
     * 
     */
    @XmlEnumValue("Resource")
    RESOURCE("Resource");
    private final String value;

    HandleTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static HandleTypeEnum fromValue(String v) {
        for (HandleTypeEnum c: HandleTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
